<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook original-version='18.1' source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau table 1)' inline='true' name='federated.0a02jjc0vbde1m1bikv2w0o0xiq6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 1' name='excel-direct.0mw705809bg9q61fhtbll1he54lm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Matt/OneDrive/Desktop/COVID Data Project/Tableau table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0mw705809bg9q61fhtbll1he54lm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0mw705809bg9q61fhtbll1he54lm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D3282ECD0D2A403BA6DD5121F4105489]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D3282ECD0D2A403BA6DD5121F4105489]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D3282ECD0D2A403BA6DD5121F4105489]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D3282ECD0D2A403BA6DD5121F4105489]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D3282ECD0D2A403BA6DD5121F4105489'>
            <properties context=''>
              <relation connection='excel-direct.0mw705809bg9q61fhtbll1he54lm' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau table 2)' inline='true' name='federated.18420wr1c6yre01dhum1n1d7qyt9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 2' name='excel-direct.0yv4g9r17pe17n1500qv51crpnj4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Matt/OneDrive/Desktop/COVID Data Project/Tableau table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0yv4g9r17pe17n1500qv51crpnj4' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0yv4g9r17pe17n1500qv51crpnj4' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8A77C234D85340E3A5B276E18F99AF34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8A77C234D85340E3A5B276E18F99AF34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_8A77C234D85340E3A5B276E18F99AF34]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_8A77C234D85340E3A5B276E18F99AF34'>
            <properties context=''>
              <relation connection='excel-direct.0yv4g9r17pe17n1500qv51crpnj4' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau table 3)' inline='true' name='federated.0qpkcx40c0kid510wif611swwize' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 3' name='excel-direct.13y73to0bds7lp12mfoec01xwqtx'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Matt/OneDrive/Desktop/COVID Data Project/Tableau table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.13y73to0bds7lp12mfoec01xwqtx' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D231:no:A1:D231:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.13y73to0bds7lp12mfoec01xwqtx' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D231:no:A1:D231:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D231:no:A1:D231:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1D633310A0C04AA6A4FE0309BEFA88B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1D633310A0C04AA6A4FE0309BEFA88B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1D633310A0C04AA6A4FE0309BEFA88B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1D633310A0C04AA6A4FE0309BEFA88B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_1D633310A0C04AA6A4FE0309BEFA88B4]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_1D633310A0C04AA6A4FE0309BEFA88B4'>
            <properties context=''>
              <relation connection='excel-direct.13y73to0bds7lp12mfoec01xwqtx' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D231:no:A1:D231:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau table 4)' inline='true' name='federated.0373uzj0buk5o412cxdpl1oyaupv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 4' name='excel-direct.19ekg1w0gq3r1914ysadn03m33y9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Matt/OneDrive/Desktop/COVID Data Project/Tableau table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.19ekg1w0gq3r1914ysadn03m33y9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.19ekg1w0gq3r1914ysadn03m33y9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9DEAD3146E8C41F6B0BE069D68DD2495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9DEAD3146E8C41F6B0BE069D68DD2495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9DEAD3146E8C41F6B0BE069D68DD2495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9DEAD3146E8C41F6B0BE069D68DD2495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9DEAD3146E8C41F6B0BE069D68DD2495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_9DEAD3146E8C41F6B0BE069D68DD2495]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_9DEAD3146E8C41F6B0BE069D68DD2495'>
            <properties context=''>
              <relation connection='excel-direct.19ekg1w0gq3r1914ysadn03m33y9' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 1)' name='federated.0a02jjc0vbde1m1bikv2w0o0xiq6' />
          </datasources>
          <datasource-dependencies datasource='federated.0a02jjc0vbde1m1bikv2w0o0xiq6'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a02jjc0vbde1m1bikv2w0o0xiq6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a02jjc0vbde1m1bikv2w0o0xiq6].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a02jjc0vbde1m1bikv2w0o0xiq6].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a02jjc0vbde1m1bikv2w0o0xiq6].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0a02jjc0vbde1m1bikv2w0o0xiq6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0a02jjc0vbde1m1bikv2w0o0xiq6].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0a02jjc0vbde1m1bikv2w0o0xiq6].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0a02jjc0vbde1m1bikv2w0o0xiq6].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0a02jjc0vbde1m1bikv2w0o0xiq6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0a02jjc0vbde1m1bikv2w0o0xiq6].[:Measure Names]' value='215' />
            <format attr='height' value='72' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0a02jjc0vbde1m1bikv2w0o0xiq6].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0a02jjc0vbde1m1bikv2w0o0xiq6].[:Measure Names]' value='44' />
            <format attr='background-color' scope='cols' value='#e9edf5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='14' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#c0c0c0' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#c0c0c0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0a02jjc0vbde1m1bikv2w0o0xiq6].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0a02jjc0vbde1m1bikv2w0o0xiq6].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{D5BEE743-1841-4DFC-96C6-2863CDEE5F0C}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 2)' name='federated.18420wr1c6yre01dhum1n1d7qyt9' />
          </datasources>
          <datasource-dependencies datasource='federated.18420wr1c6yre01dhum1n1d7qyt9'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.18420wr1c6yre01dhum1n1d7qyt9].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.18420wr1c6yre01dhum1n1d7qyt9].[none:location:nk]' value='128' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.18420wr1c6yre01dhum1n1d7qyt9].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1864088773727417' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18420wr1c6yre01dhum1n1d7qyt9].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.18420wr1c6yre01dhum1n1d7qyt9].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{D902A9E6-FD46-4900-83B5-B7C6E7CC7355}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 3)' name='federated.0qpkcx40c0kid510wif611swwize' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0qpkcx40c0kid510wif611swwize'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qpkcx40c0kid510wif611swwize].[Longitude (generated)]' field-type='quantitative' max='-984491.25011906214' min='-10940627.666435791' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0qpkcx40c0kid510wif611swwize].[Latitude (generated)]' field-type='quantitative' max='7199383.1451428756' min='990474.11822763085' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0qpkcx40c0kid510wif611swwize].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0qpkcx40c0kid510wif611swwize].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0qpkcx40c0kid510wif611swwize].[none:Location:nk]' />
              <color column='[federated.0qpkcx40c0kid510wif611swwize].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.0qpkcx40c0kid510wif611swwize].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qpkcx40c0kid510wif611swwize].[Latitude (generated)]</rows>
        <cols>[federated.0qpkcx40c0kid510wif611swwize].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DDE3E252-34D2-40BF-8680-CAC1A4FA52AA}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 4)' name='federated.0373uzj0buk5o412cxdpl1oyaupv' />
          </datasources>
          <datasource-dependencies datasource='federated.0373uzj0buk5o412cxdpl1oyaupv'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0373uzj0buk5o412cxdpl1oyaupv].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0373uzj0buk5o412cxdpl1oyaupv].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0373uzj0buk5o412cxdpl1oyaupv].[tmn:date:qk]' field-type='quantitative' max='#2022-02-07 16:41:26.153#' min='#2019-11-24 07:18:33.846#' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0373uzj0buk5o412cxdpl1oyaupv].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0373uzj0buk5o412cxdpl1oyaupv].[tmn:date:qk]' value='228' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0373uzj0buk5o412cxdpl1oyaupv].[none:Location:nk]' />
              <text column='[federated.0373uzj0buk5o412cxdpl1oyaupv].[none:Location:nk]' />
              <color column='[federated.0373uzj0buk5o412cxdpl1oyaupv].[none:Forecast Indicator:nk]' />
              <text column='[federated.0373uzj0buk5o412cxdpl1oyaupv].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0373uzj0buk5o412cxdpl1oyaupv].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0373uzj0buk5o412cxdpl1oyaupv].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{DE8EA096-17A6-4568-B90F-40C467FD99BC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='38560' id='9' param='horz' type-v2='layout-flow' w='89421' x='483' y='60511'>
            <zone h='38560' id='7' type-v2='layout-basic' w='79765' x='483' y='60511'>
              <zone h='38560' id='11' name='Sheet 4' w='79765' x='483' y='60511'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='38560' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='80248' y='60511'>
              <zone h='27874' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.0373uzj0buk5o412cxdpl1oyaupv].[none:Location:nk]&#10;[federated.0373uzj0buk5o412cxdpl1oyaupv].[none:Forecast Indicator:nk]' type-v2='color' w='9656' x='80248' y='60511'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='26597' id='3' name='Sheet 1' w='44961' x='483' y='929'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='59582' id='6' name='Sheet 3' w='44460' x='45444' y='929'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='32985' id='5' name='Sheet 2' w='44961' x='483' y='27526'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='98142' id='13' type-v2='layout-flow' w='9613' x='89904' y='929'>
            <zone h='8478' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.0qpkcx40c0kid510wif611swwize].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9613' x='89904' y='929'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='16' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='205' h='26597' id='3' is-fixed='true' name='Sheet 1' w='44961' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59582' id='6' is-fixed='true' name='Sheet 3' w='44460' x='45444' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8478' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.0qpkcx40c0kid510wif611swwize].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9613' x='89904' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='256' h='32985' id='5' is-fixed='true' name='Sheet 2' w='44961' x='483' y='27526'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38560' id='11' is-fixed='true' name='Sheet 4' w='79765' x='483' y='60511'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='27874' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.0373uzj0buk5o412cxdpl1oyaupv].[none:Location:nk]&#10;[federated.0373uzj0buk5o412cxdpl1oyaupv].[none:Forecast Indicator:nk]' type-v2='color' w='9656' x='80248' y='60511'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D9C2C78B-EB94-4C37-A100-8AA283313F2A}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a02jjc0vbde1m1bikv2w0o0xiq6].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29DE645B-6EE2-45A9-9D4B-48CFC8169DE3}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18420wr1c6yre01dhum1n1d7qyt9].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D55BE84-83F2-46A6-9186-7274313C62FB}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qpkcx40c0kid510wif611swwize].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qpkcx40c0kid510wif611swwize].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E7E77AD8-4272-464F-A63A-BA30F47018C6}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='247'>
            <card pane-specification-id='0' param='[federated.0373uzj0buk5o412cxdpl1oyaupv].[none:Location:nk]&#10;[federated.0373uzj0buk5o412cxdpl1oyaupv].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0373uzj0buk5o412cxdpl1oyaupv].[tmn:date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0373uzj0buk5o412cxdpl1oyaupv].[none:Forecast Indicator:nk]</field>
            <field>[federated.0373uzj0buk5o412cxdpl1oyaupv].[none:Location:nk]</field>
            <field>[federated.0373uzj0buk5o412cxdpl1oyaupv].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9AD4CAC-6B01-4FA1-8CB9-E5E944140145}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0373uzj0buk5o412cxdpl1oyaupv].[none:Forecast Indicator:nk]</field>
              <field>[federated.0373uzj0buk5o412cxdpl1oyaupv].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{CE6E602A-0EA6-4F5A-9DDA-9D8EB3D8A5F8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dd5gcZ37Y+W9VdZzOk1P3BExADgMCIAmSi43USifpvJKe53x+/Dy2Hz+2
      n0e2LMu7J1tn6Wiv7rTy7uokrSVrTytZ0kYvl8sll0uKCSSIQGQMBpiIyXm6e6ZzqO4K98cM
      AIJAI88gzPuZp59OVV1v9by/rnrrTZJpmiaCsE7JDzoBgvAgiQAQ1jURAMK6JgJAWNdEAAjr
      2jUBYJommcQi586dI57OYRo6Q5eGr1tpaGio5AcmwlPMx3MAaPkUo1NzAOTScTL54m0lanx4
      CFW/7X0QhDsyOTrEmTNnmA0vXRsAi9NDfHhhgu3btxFfjIBpMjw8CqaJaRgYxvIV00uXhjEM
      A9M0P/Le8vNkZJpwYjkAMgvjfPv7L5NSdeZHe5mIZrh81dU0zSu3y+tevp8cHUbVDYyPLHv5
      vavrXLuuINyuk909dHV1Mdt3AstH3zhxdoDnf/mXmLw0QM60X3l9cXaYUwNzuOQ8dR1PkEvH
      OX++m/HxGX7hl36ewQvdZLMZJFcNdZZrN/bMM/s4evQEnZXLz196+SV+9Qu/yvuvv8G+zz7L
      D77/Cjs6QwxNx+lo8JOSA5jFPBd7zhOfnWTPgc9y8cQHuHx+crqNCjnJhYkwvsogluwCFXVB
      ahtbaKgpX/UvTni8VFX4P1YGkCQkE1raNzF2aeDKy+fPD/GJTz3H/mee41JvN063n127uuio
      sTMdTbO4lESWFWamZ67biN1bhcdMsJgu3DARNfVN7N61E68/wO6unWRSCRSrg207dvHU7jYG
      L/QxOrOIolhJxKJgFGjfsZ+f/9RT+P0+1EIBm912f78Z4bGWT8U5e/YMSwSuDYB9O9t5+4PT
      FIsF8vmrGbYlVEXv4ARTI31UNbSiFQuohTxj4Qx+I0reVk5dVaDkBvft38/xI0cBsMkyuVyG
      2flIyeUNQ0dVVfr6J2jp3IDfU8bmrVvZsXUTyDaqKv2AQXV9C107NnPiw+P3+JUI64nD42f3
      7ifYtW0j0sebQqTjUUYmZmlt78TttBGLxSkP+JmbHkeVnDQ31hJfijA1PUdL+0bcDitT48NY
      XOXYrQoum4ymOHE5rGj5DBndgs9lZ356Em9VPXIxzcjUArVVlfjL/SQSacp9LpYSmeX7ZAab
      AlOTk1Q1NFPp96BmkwwOj9PS1oms51AcHhxWhVQsythMmI0bO7FZlAf1fQqPmGg0SmXl8jn5
      dQEgCOuJqAcQ1jURAMK6duWipWmaZHK3V1ElCKvBZlWwWVe3LKcVVIrRq1c4r7lqn81rq7px
      QbiV1Q6AYiFLsfsvsEjLRV9xCiSsOyndxuVLPw9lABi6/hg0bzDRNY273QvTNNH11W0QZej6
      leYm60nRkCmYy0eaVQ+A+Ew/v/3Ff8MX/92/5v/9i/9xzXv5ZJhDR09dt84Pv/kVLowvV5Qt
      zY3ytd//P/n9r3yV3AM8Q0vMDvIfV/bj63/219dkbC0d4d0jJ65b57/+h/+DFIBp8M2v/Sd+
      +0u/yd98/yU0o3Smi82OcPJ8P7qa4T//59+97fQNn32fL/3Wv+G/fPm/cGly/qbLHnrnNfIa
      vPbdP+Z439Q1733za/+R3/7Sb/KdH/30noIjFZni2Kmeu15/VUmgmxIAygsvvPDC5ddXowzg
      8Fbx1M42TvZF+Z1//6+4cPwdvvHf/oxoTmb83Dv8zXf/J5K7mkvHX+Nvv/MDnBUhktP9VLXv
      piZQxl/+8Zd56h/8S77w+QMUU2G+9pUvc+jDc2zdupFv/ckf8NrfH2Lrrh18///7I3769gds
      3rqFb//FV3n5p2+wcdd+vE7r/dkPTyXPdnVwqG+B3/vir9N36iB/8qd/QjQrM3XhIH/97R8g
      lbl554d/w0/fepcNW57gwrFD7P3c89gxePV/vsx/+NrXOff6t8m7W7hw6Ef87fdepK51CwMn
      Xue/f/Nb5GQ3p978Hi++8jO81c30nnqXsyePk8RDZPAof/7Nb2GUVbIhVH9d+qYGzmJUb+cL
      n9jCf/+7l9jeWskffe0PuTSToK3ezR9+5fc5crKHKrfJ1//ojxgYCVPpMzl27AQfHPmQPfue
      wmaRee3VH/PF3/0KL/3tN+jo7OTP//gPOT88S6jCwvd/9Aqnz/djy8/xjf/2Z7hrWzn2s+/w
      /ZdepXnjTl7+uz/l/YNvc2EsytiZN/n+j17GURnizNvf5bs//DHljR3EJ7r54z/9BicvXGLX
      xhB/+rX/h8Nn+tmzdw9O21oUgvNkxg5hIuGU9bU+BdJ55cc/49/+py8zcPQVdjz7PNv3fY4v
      PP8cgaoGmur8HDpy7CPLm8SSOZoaG3A43ciyzIbOLSSmerg0Mc/8QgTFKjN+8QTdo1FshQiH
      j59hbn4BxWJF01bvkPHDH73Ml37vD+h97yfs+dTPsWnvp/mV5z9BY2sHDj3B2d7B69aRFCst
      TUEis4O88sZRGitdvP7WQVzecjZ2NHPw3Xf5zOee55mf+9/45L5tOP21/Kt/9r9z7kIvC3PT
      aKaEaRg3TVdNsJViJs7br76IPVBP99E3CCeLtHduZXHsPHp5Jzs2t/FbX/x3WIFP/uI/wk+S
      eHa56YuWWeTLv/slqlp3c+7wa2iOSoZPH2Rkep7B0Tn+0T/8VV768Wv8+9/7Cm3+Au8cv0iV
      W+Lt944wNbvAP/31f83E+R4OfPbz7D3wv/L5556gsjZEXcDBkWOnefGln/Cbv/P7pMKjnPng
      dZaKdmLjp7k4WrppzGoomhK6Ka11ACg01Hn57l99k4zkx+suY2bwFIePHuUnr/4Ug+XGeFfJ
      fPrAfr7x9f+bv/rrb3HuxBF6BsdRFIWimifYspHc0jQFixebpFET6qSx0kddUxtGJspcNL5q
      e9JcV87f/vU3SVv8eMvKmB04wysvvszBE91IssLHT/5NI8P3/vLPef1oH0/u3Uel34nNU83O
      TS288tKLqBooEjicZVw48S49g+NYLFasluULdZYyLy31AXr7L5VMU8+Jg3z9q19h59OfpjEY
      JJ/Ls3PPU4z2HKN3eBJZWU6XYmq89OJL6IDNbkeWr2YDi6uC/+sPvsGXfuNfEGwMUshn2bLz
      KbwuK6ENnbgddhqq3Xznf/wlY+EcXqeCu7KRTe3NICvYbDZkwO5wMnT+CCdPHObHr70LkgyY
      1PqdfO/v/oqZSJra+iBFNUf7lt1U+svu+//oRiTAgoFVMskbytWmEKZpEonlVmWjejHH7EKM
      YGM9hqYyOjpGXbAVl9PK3NQ4ksOHXExhWhxouoRdKuD01+ByWAGT8OwkWU0hWF/N+PgErjI7
      7kANicgMuuwk2FBHfHGOyFKa5pYWlhamyRkWmoMNSJJ03/bDKOaYWojR1FiPoRcYHR6hNrQB
      t9PG/PQY2D3kk4uUub1YHG5ysUVqm5tRTJPJsSGyqk6wuQ2X00YuHWdiepbG0AaK2SVymoxe
      LNDY2MDU+DAufw3ZdIL6mkrmFtMEyhSm5yM0tbbhsFquS1smscjkzBwuXwXBhjowDabGR8Dq
      pqGmnPGJKVxOO97KWsx8krlokoDXjs1VQXppgYraBmwWhamJUeqCLVhkCUyTmclRipKdukof
      SymVuppKDK3A6MgINcFW5GKaqbkIoeZWFsOz1Dc2MjM5S7A5yOzECDZPFVpmEcVWhi5ZiU33
      0TMwxvEzPXz9q18lOjdBWoXmliY8TivustVt2auml9AP/w4FQ0E15LUJAEG4bKjnBOf7R9ix
      7wAdzdeWZcocljULAIC8oXD9T4kgrKKO7fvo2L7vQScDuHw69BGGln9ASVk9S0tLlJc/Xr3F
      CoUChUIBt9v9oJNyX2lFK7DanZuklRuoHz0CSJJEbfXjlVEABvp62Lyx7UEn474Kh8OkEina
      WkMPOimPHBPQTAmLZCJJiFMgYf2RVo4ALll7OJtCCMJqkQCLtBwEsmSKABDWNxEAwromygDC
      uqLpJhe6NTDBXMtToEI+w8TUDHoxz7EP3ue99w4yMbfI7MQwPf3DV0eMMwwmx4Yp6Nc+LqpZ
      Thw/TjKrLu9IPs2RQ+/z3sGDzEQS5DMJpmYWljdmmvT39nPzVjOrJ7m0wOHDR1hK5VaSY3Kp
      7zwXBkYwTZOh3vOMTM1jmiap2ALzV5psmPR2n+L999/n7MUhcuk4x44eJZ7Ok0lEOXb0OKnc
      jcdXelgV8hmOHztCOJa68lo2ucTMfBQ1vcT777/PewffJZJcm0vwigmtmkGLZtBaNNYqAAxG
      R4Y4eew0itXB088doNolk4zP030pgi07Q/el5TFEE4sLHDv4NgkVEtEFjh58h6QKB99+k83b
      tvLmG28AYHG4eeYTB/BadQxZYnR0kFPHzgIw2neWI4e7eVAdPAuGwpP7dnPw7TcByEeGGFyy
      oM318MHh91hSqhk/9wHhdI6hwfN0n7ncvkdiy8497NvZQTgaY34hyu4nunjvvXd4673DdHVt
      5e233npAe3V35ufn2b57L4cPvbPySpGRsX5OH+3B7i7nwIEDoGaw2e9Pq907s2aN4WQ2btmC
      Y6Wpq5ZPMrqosbG5EZ9DI6maLC0t/3r7q+pobqhZflxdR1N9NQDNra1c7LmAJl3tJFJILzKf
      txOs8LJ522asikxiYZyfvHucXGKO8ambt4tfLV6nwgeHj1FZu1zVX9Rl9NQ8kaxEoKKWYmwK
      i6KxkDTZunXjNf8E0zQ5cvQUz+7fg7dM4fTZ82zdsZtyt4Njx08SqKx+IPt0typ8Ls6eOcPG
      zbtWXrGybcdm5JUmWtnFKQquenz2BzOu09oEgKFz6vgx+gf6GJ1a4NyJD9n91DNYHW6cVoXF
      eIYdmzs5deosC9NjdPcOcPLEKaYnRznfO8Cpk6fw+vwU1DyhYBtjfT1E0yonj5/kyaefBL3A
      sSPH6B/oJWl4+K3f+HV27+qiJVi7Jrt3LZPh4REsFgt5tUD3qVMUMCkWChQLRdwV1UiFHEkq
      6aww+ODICXp7u1kIL3D2fD/JhREslW24rDIvv/wKqponl82gqnlkJNTCozVwwSs/eZlsPk8u
      l6P3/DlyaoZDh47RP3CRuWiSDz48x4H9u9c8XZfbSD40A2OpqSijCzk2tQVvuWxPdzdbd+y8
      8ityM++///7yYfZBME26z/ewc+eOWy4aHh+k6AvREHDeetlwmEgkwpYtW+5HKteVfHyJ5Dd+
      GwDTfIiuAtk9lWzy3N6y23fuXN3E3C+SdFuZH6C6uXOVEyPciKgHENY1EQDCuvbQnAIJwlq5
      XOp9qMoAgrBWLl8BMhGnQMI6dk2PMNM0SafTDzA5q6Ojo4NUKnXrBR8hFouFqqqqx26/FEWh
      rGxtRocAru0QI0kSHs9tXod8hDyO+yTcP+IUSFjXRAAI65oIAGHdMk0RAMI6J+oBhHXHMMzl
      S0CiIkxYjyR5uQ5AVIQJ65oYGEtYn0zpyuj1IgCEdScWSwIgSbIIAGH9kWUFWZYxDF0EgLD+
      +P0uLheDRQAI687KjDCIABDWHRNIp3IYhoEkyeIyqLD+FItFDMNEliVxBBDWH5/fja7r4iqQ
      sP5IgCwvXwkCURMsrEtX5wm7GgCmSTqVJB6PE4/Hyd/2EHwG83MLV55lMykSiQRFTb/JOteb
      n5+76ftqPkc8Hieby398Duobp0rXSCYSaPrtp6OgqhgPx0B5wiq6PEUSfOwIEI8t8tr3v894
      NEo2f+0w3MX0LMfP3miWcoOzZ7uvPHv5Ry8SXpjnvbfeIJy8+bzDA2ePEUlrAJw5e/amy777
      s58wuRDh/MnD9I8t3HRZvZDh7XcOMrewwMxc5KbLZiJjnB6YAmB2bIycfmeDqh/+4IM7Wl54
      8MyP/IReLQNIEo2hFmqrqmhpa8NrGnx4+D0UuxPF4ScgR+jpmaei3InXUmRyLkoiU+AzB66d
      89Xp8tLe0UlzQxVvf3iGLaEAM0tp8gWDA/v3cOF8N5lMmsrGdgb6eylLK+zYuolEdJ6zZ8+w
      mMixf1cbh0/3U1HuZ8eOXVgVUCw2Wje0o1Q5ONo/R2FxFFWXkO1eqpQcQ9EY+aKNX/rccwz3
      nKF5+1466/wADPd1E06qFAo6zzyzk5d/8DobOptIFxSq5Sg94yrlZQrJxCLlehtv/OzH1ASb
      WVhM8PynnubwoaNYLFDfvovRng8JVNUyMxvm2f27uXDhAmWeADt3bkW5j7PSC6vIBJAwuckE
      GUY+QqLoZu/efSxMjdAYDNHatpH25kY0TcNA4tLIjY4IyxSrnWIhx/FTp7FbLYTH+1nMahQ1
      DYsiMTA0RlOoia07uqgp9+KrrKWrazfFbAK9oJJTi9TWNWKRl6NVK+ToPnuGs/1T7N3Rwtnu
      ASwWK329F8hnE+jOGn7xc88BkMnkcTquzjc7ODbDU0/uo9ZZYCKawuWromv3HlJL8zQEQ7R1
      bqY1VE82k0Y3TUyLna6uLqRijrlL3cykTBxlLrrPnKagw85dXbgtBjZfBc3NzezetU1k/kfK
      ci2wxE0KwZLFRTGXxNA1DGQkqwO9kMc0Dc709PFE1058rhuPZGyaBkMXz9HauRWvx8embTv4
      5V/5NYgOk7VWsbGtBQmwO2zkVZWPD1Bt81Tx/Gc+weTFE0wtZQGw2Jzs7NrN/v1P4y1zEqio
      ZOeuXXzhl34BCSvtG5qvnNl1bO6kr/sChmGQz6soGKhFnVhKxVt27UQMNruDQj5/XRouK/P4
      qKquZVfXE3z2k/tvuIxhGCXXFx5CkrlyA+WFF1544aPvWe12fOXlWBUb/jKZwZExtu58Arfb
      j5aNkC5KNNeWMzw+TU1dPbXVVdhsdvx+HwCFXJKZuTCe6iY6m+sINtTSe7GXVK5IsKWNxPwY
      WV2hoaGO1g1tjA/2YXf78Xld+P1+bDYbHpeDgYEBbL5q2kJ1yJK0vI1AOYoESApVgTL6B4cx
      FCuVleW4Pd4rE3DYXH48Np2h4VFku5NN7S309fZR0dhGQ3UAu82O3+/FZrNRWRciH5shp1uo
      rAjg8fopc9jx+/1YbTaqG9uQMmHGp+ZweQP4fR78vuV0ev1+yl02hibmqaupRBJHgYeels+h
      nnx75Zn58MwPIAhrIR9fIvGNL608E/MEC+vW8u++CABhnfp4RZggrBOmeXmI9DWbJVK4GdPQ
      SSQSJWuhiwUV3RBFtftmJQAMQ/QJfih8+MF7BOqaqDV0JiZnaWqsYmY+SsDr4p1Dx9nR0Yjp
      DmHVk7S0hLg0MkFjfRUL4Sh+TxnvHD7Dr/3qP6DMLv6dt+PysCggToEeCrFMgY2d7Zw+cZx6
      P/z0p39PQbHRNzhJZVUNFi3HhycHKcZn+PErbxAOz3Diww/RZIWBkVkqq2tE5r8jl4+moj/A
      Q2HHplZOnDxNU3Mz/eMRurq24w34sOgGyegcFncFHRvsVFTr7PQ3EE9laay14A0EULASW5gh
      q2oiCO7CqtcDmKYpKoiEh8ZyPcAXWbOrQIZxZ60rBWEtPbBjpqZp97S+LMvIsijCCPfmgQXA
      t149wemh8F2v/8I/eZbG2sr7mCJhPXpgAZDOaUSS6l2vL66LC/fDHQWAaZqMDfZQ1bKd5PwY
      WcNCpdvGbDRBS6iesbFJ6kMhTMMgn81SX1+3WukWhPvijo8AHqeFvGaQ12WspkYkqbGh0c+5
      C2Ps3rOJyZExZmcn6dz+JIZhlGwrb95Wz97SDMO453KEsH6UKjOWDIDp/hMs2YJkF2d4cu+e
      lVdN8nkVPZujkM9imGC3KiyEYwT8DuZm58FioyHYRHwpSnV5M7JpoijKdZ//0Y7Jd7tDFsvt
      xe/QxDwjM0t3va3tG2ppqCm/6/WFh83VvFcyB6m6RHhqlMZg6COvmth99ciKRl1LEwVDxmW3
      kEjnCPk8xGMxfH4/umFg3MFoDKut+9Ic3z04eNfrf+nXbCIAHkOFm02RVFvlp3tiCnc8DiwH
      gSQpVNfWXlnGvnIf8C93MwyUL2cSWZbhNn+dBeFBMEzo0ZylA0C2ezByCTJZ91qm65G3GEte
      N6TMnajwuylzOu5jioQbOVNwcLD106UDQJItOB02EonEWqbrkffjD/p47cT4Xa//5X+yn+0d
      wfuXIOE6WUNiRnajbH361k0hRDMe4XFjlUymKjcg2RylA8DmdOGwWqiva1jLtAnCqrMAXuUW
      jeGyi1NYy0OkYnffXEEQHjY6MGkqBLMLmLp24zKAaRosFpy01RqE7VVrnEThdhiGwWx4aXnW
      87sgyxL11eXrrkGhYpVo+6SL5EQcimrpQvDgxW5qGkIsREUh+GFkGAYv/M3hu25PFXDb+Msv
      /eK6CwAAxSIx5duC5HDdOAAkSeaTn/4MC5ElNm3ZttbpE4RVlSnAkHMXcJMygKIoRCMLDF4a
      XbOECcJaiGYtaJ4aoEQAmKZJdLKPxbwVV9mNB8AVhEeVqslgXR49vMQRwGR4dJJCJsbw6Nga
      Jk0QVp9mSHCzOcIkSUYx8iwls0iyaNMjPF5UyX5loIaSZYDdz/0c5Q4Ti7L+rhIIj7eodPXS
      fsncXUwvYVrLSGWya5IoQVgrVUZkeVxEbhIAFoeHdCbLlg03bpiVzaSJJZZnkEmmMpimSTKZ
      xDANNE2nWLj7FpGCsJq2VqSoXjgO3KQ/gF7ME1+M0HvJxoa2to+9azI00EtFXTOx8ByYOvPY
      UGwKkcUYEkU0w0rHhqbV3A9BuCt2xaBWmyNMiQAwTZML/cME66spr71Bx3YTWjd0MDo2SZnX
      Q6g6wLneeZ7Ys4mJkTGmpyfo3PnUQ9Mn+F4HvzNM86Hbln4fetzpur5uRu37aJ9gwzDZJI/S
      U8iXOAIYOql8kZ07d9I/cOOuhPHYInaXm0qPg5GpJbZvbWKwf5D6xhCBqmpymQRSufuh6BN8
      r/9kWZIeym3dK0VR1mxbDxPDNGjzpdkdfqVEAMgy5R434+Pj+Cqqr39fkgi1XD0tKq+uB2Dr
      Vt/VZQL++5poQbhfJMkEdD7ru1iqDCBRH2xCM5bn+xWEx4kkKYCJbJZoDg0ms9MTJDMqFleA
      mqqKNU2gIKwmSTKvTJNUsia4PVRNz+AY4YX5tU6fIKy65aKafJN6AJuTvV27sDvL1i5VgrAG
      THN5jhhFuUk9wMUzx5jIV+C0iPH9hceLJJtISJg3myVy0xOfoNol0dGxcS3TJgirztBX6qak
      mzSF0DMR7JWtTI8NrWXaBGHVSZKEYRpQqhBsmgaqtRw5NUl904a1Tp8grJqCaeG9aAsjsTIK
      mlmiKYRh8Pbfv0ZVXTOFaBQ2hG60mCA8cnTZypHQP4NCDm9sqHSn+AOf/QXqbtQOSBAecZIk
      gb2MVO3OEvUAsiwyv7AurL+WUMJd+c7rJxgPp+96/d/4lX14PQ/fSOP3LQAMrcDo2AQNoSZ0
      XaOoqgQCgfv18cIDNjST4PzY3c+yo+sPZ33SfQuAuekpahrqmZ6YIJWKUVnfisj+wsPuvvV4
      l1huZ40kIcvyfemwIQir7b4dAWqDIcbHJwk2NaFrDRQL6j32+RKE1XffAkBWrLRuWKk0s1mh
      zHmlS+SNbGmpxmq/+74GZXbbbR9lmmoDfKqr+a63VRVw3/a22hsr+FTxrjeFz+28rW2Zpsn+
      bUGSububKtZlVzBN87b3a1d7HRUB711tC8BiUR74WcENeyaa99qJ9RZ0Xb/hhsW2xLYexLZi
      2Tx/MHR1RO1VH/XqVjuYiC8RWYzdl9MlRVHQiwWii0sYJeJa07Rr3stms7fsyK6q1w9BrigK
      +WwWwzQplBgCpli89lCQzWZusQcmqnr9Z912JjENMtnclaeGrlHU7uxX93a2lctlMQyTopoj
      nc0Dy9/Rnf4Pb7atXCZFMn3rMalMU6dQuPVRsNS2lBdeeOGFW669iiYnxvD5Aqj5HOgFMtk8
      0aU4+UyCWCpPMZdkPrxEmcPK+OQ0Hp8PRS7d8XxooBer3YnFIjE+PoHdZqVgyqTiEU6fPotu
      6ETDUewuL3arzIXTx7H5a0lGZlmILBJLpHBYYHI2jNUisbQUQ9M08pkE8UyBRHQe1ZBxOR1M
      jgyQUCVi4QUMLUcspYKuEgmHOXf+AmqxSCq+hN3txyIZnDp6jIrGJhamxlhcipFI55ANlblo
      HEXSicVT6EWNVDxKrmASmZ/CVJw47dbb+i6ziQjn+saorwkwOjqOzW6lUNSZnZzA4nRjt96f
      M96hi2coWj30nTuJbHGSzmXQNB1JV5ldWKKYT7GUzOH1uO9q6APTUOkbGCOfjGIp8zA1MYPN
      CjNzUWyKwcTUPDZFYnpmGpvDQS5bJDw3iSE7cDpsN/3sfFHjyOLVH4UHPu5hNp0iGksQDi+Q
      jkeYnZ3D7vEQT+QpJOMsZXJ47NB9YYBcJkkik7/p57W0tBKdn2FkZIz6YANjA33E0iqLsSQ1
      dXW4nXbqgzUsLsTJJyNksTM1PkFW1VALKjZFZ/DSMOnYIlMzM7j95cQWY0RjaWoqvaRSGcbH
      lwcMtji8mPkEuglLySzZ1BKzc/PU1DdSW1eH02alIVhJdCFJfGECqczNxPg0BUNGVfOgq4yM
      DBOLRJienSVQ7mcxEiaZ0/G7rWQyeSbGJ277u5ycnEbRMywsJVELBdLJBLFYnJyaZWJ89p7+
      T5fpaoqljMHc1CSV9SEqnRKm1UksHmN2IUKwoY5UMsXk+MTdH9WLWRzeKmrLy+gdnqK5JcTI
      8DDJxSjReIrkwjhjszFqGmqIzM8RW4yTvsPv6rIHXhPsdnvAMHCXOZlfilNVXYfXVUbOZqKa
      dvRsnMWCi44NQeYjMVy3iPBkIo7F7qSmpoqJ0THqW9uZn5+izOOFQhpDtuOwO/B4FLKFHPv2
      7mUpGsZiseDSNGw2CzarjXgyR3mlH5fDhtfvRVOzzIUXkSQFn2+5RtPtceNzO7g0GcFpKaKa
      DqoqXFgVGcUoYHFUYbU6cLsMCkU3T+1tJRxewGKxo+lOLIoFmyKRKUDA78FutZF1OcsAAA36
      SURBVOALlJPPJojGkkiKBZ/rdgueJoGaBjo2+5lfiKIoEhabA8ViksvZcLld9/ifWpbJquze
      u5d0bBEdsDocVJa5SBkFLJLBxPQsSBI+v++Wn1WSzY9VG2S2YGFnazUjI+NU19aQTmtYFQmn
      14/H58VuteP1etE1GbWg4PPceSF91QvB9yqTSeNyPXxV6MKjKZ1XeXX6ajnpoQ8AQVhND7wM
      IAgPkggAYV0TASCsayIAhHXtmgDIZZKMj48zuxBZlYZseiHP+Pg4U9Oz6Hc4w3kyMk8sW3pS
      6GI+SyZ3e5NypNPpG+7f9PgwQ6OTd5SujzJNk8nJu19fWHvXBMDFD98iYbpRE/Mc+vDcPX94
      cnqAEwMzV54nZvo4P76EYuZ5851Dd/RZkclRFhK5j72a4913jgJQyKVJ3mYAHP7g0A0DoPti
      P+0tN54RB4DUDO+cGLjpZ1/svXhbaRAeDtdVhPnLKwm5PPQOH6LnzIfkNIW0qrOn1cfPjo9g
      ygpPbW5kajFDeUU1TiPFfFIllcxy4JntvPSTg3S2NZI1HAS0WfrnZWrcCs2NtQB4vH7qGps5
      c76ficEexqMZitk0Tz73CV7/8Yu0trWzlC6yb0sN58d1nutq5N0jPTR7ltM3OzHCbHiJxWSO
      ri0NDA72U91QTb27wHymnPTsEAupIrlMhmcP7OflH7xI56aNRBM5PvepZ6/Z1x9+79u0bdzM
      /GKS3ZtbmJic5NLYFIn5MUzFjoqNXW01HD13CX8gQJ09xWD/PE3VLrTkAom8QSKd57OfeII3
      3zxEdV0N+XtoCSqsvevKAL3nz3Dy9FmefuYZenp6sVgUZqcm0fUiZlkl//ALP0/fyDTP7n+K
      rRs3cKa7B4fVQm5phmhGo7q+iSd2d5GORwkFQ7Rt3HIl8wOMDPVy+uRJdj7xJL3DUzy3/ym6
      NtZxcXAal6+SJ/bsxZpPkClqK42crm0glsmkMZCYmZwgUFtPc3Mr2za1Y640/Lo0Mcf+p/ax
      qb6MoaklvOU1dO1+Ai2XvG7nXb4Kurp2Yxaz1DQ009zcTEdrHRcuDqJYrMxMTHDy7AWeee5Z
      9u3eQSgYorltI+0tQc73XMBiUYhOT3HpwgkadzxL165dOG6v2Y7wkLjuCLBlx26afIBp4vUH
      2LJtB8FgCDk3RygYRAI8dplYOocNnYDPR2vnFjY0B7FYr236ZHGWUZhLYRjGlelpNnRsYU9X
      KwDjDoVoIsv8TISq5h0sjGtohTypgoHbbkc34iRiSxQ0HVjOWX1DY3z+5z7HpcEhwIJhFK7p
      b+qwQCKTZzacILjTxdQdfyUKgYoKtu/YSSgUIj47wthMhJZqN2X2MozsDIZh4PH52bhlG83B
      ILIa4cz0JG3+em6jYaLwELmmNajT5cHr9WFTAEmiKdRAf18/FqebiooK3B43LoeVxlCI8aEB
      NMnOju2bGRnsp4CVqooKPB43bncZbrebQE0jeiaCaljwustQrA48Xi9u53J7nmAoxMTIIK7q
      Jloayuk+fRodmV179uL1VaBnF1GxEwo2UFFVidvtpqHKy9h0hPb2dvz+AH6XhelIgtraWtwe
      N53tGxgZGqAy1EFDlR+3272SJjcez/J51OXHN773Eqyvpn9giDJPgKbWNrLRaSKJPFU1DdjJ
      kMjp7Nq2mcG+PkxrGfXBViyFJaKpAs1NQbwr2xEefg9RUwiDixcH2Lp184NOiLCOPEQBIAhr
      T1SECevaLQNgcTF6yw8p1fFdEB52twyA+flbzxEmzqKER1XpHmGmSTaXw+8X47sJj6+SR4BM
      dIzv/uRNopHwWqZHENZUiRliTAzFTsBmksiJIQ6Fx9eNjwCmwVuv/ACLtxqn07nGSRKEtVNi
      ggyF/+VX/jEei/bAh7MThNVUshBczMVQXJXUVZevZXoEYU3deJI802R6LsZ4/wDRSANNwfq1
      TpcgrIkbNoUwTZPZqQmKBig2B8H65ebMxVyakYkp3L4KsvEINk85zY11azrIqSDcTyVmiZSo
      D4ZYikYxlasjsVkcLip8brLFNHZXDbqavDIEuqgMEx5FJcsA2fAljl2IEqqrpLLcD0A6OsPo
      fIKOlgamJ6ZQ7E5kWcY0TXEEEB5JJQNAcfiZGXyLoraNHVs6ASgL1LK1LIDVZqdzYyeyRXR/
      Eh5tJQNAyydo73oOLb145TXFYsFlubzKAx9XVxDuWcmmEM5APWYqjL+iai3TIwhrqsRlUIML
      3WdJplMULaImWHh83bgmWJJxSirlwU4siJpg4fFV8kTeVxUklzapCm5Zy/QIwpoqWQZwO2QO
      HT3O6TNn1jI9grCmSh4BHN5KPvnUEyymS4/HKQiPupKF4Pfee5+UCk5/9VqnSRDWTMlC8LPP
      PovNZiOVvH5IQUF4XNyyU7zD6ViLdAjCA1EyAGRZwjDA573zqScF4VFRMgDUVJSsbmFs8AJ9
      w3c+AbEgPApKXgVyVbVQ7RrD07KPDSHRIUZ4PJUeFiU8jDu4nUw8jN0mWn0Kj6eSXSIvXpoh
      I6V59umn1zpNgrBmbjwukKETS2VILU4zNXProREF4VFVcliUzo5OOjs3XTOZnF7I8cGx4xh6
      kfPnztI3NLpGyRSE1VGyT3BDTSVFZzVqMnLldcXmpLaqHEPPEqhsQiskRJ9g4ZFW8ipQz8lD
      DKfd1FVX8snK5U4xhWyKSDiCxxsgHZ/F5i4XfYKFR1rJGWIy4WFePdxPdXU1n352300/RAyL
      IjxKNMMgmcsRz+VKHwFkix2zeHsTTwvCw8Y0TWLZLGNLi1yKhJmMLZFSVfSVyVx8Dic+p7N0
      ANhcAcorytnU2rhmiRaEu2GaJsl8nrGlRYYjYS5FIiTyObwOBy3lFbRXVfOZjo14HA4UWUaR
      JCRpeUrfkgGQTywwMjGFqub55YaGNdsZQbgVwzAYWYxycW6WS5EIS9kMLpuN5pXMfqC9A7+z
      7JqMXkrJMkA+Mct00oqRj9PR3n7TDxFlAGG16YbBQHiBY2MjXIqEaSmvZFt9A+1VVVSUuVBk
      +ZaZ/UZKlwFkC73nT+P2+G8ZAIKwGjTDoG9+jmNjI4xGo7RVVfN0Syv/dO9TWO7qB9fE0DW0
      YgatkEErpm8yMFYhj2J3s2Vzxz3sgiDcmaKuc3FulqNjI0wuLdFZU8OBtg7++VPPYJFvb1Zf
      XVPJJidJLV0itThEOjaCruUwMZEkBYvVhcXmxmJ1lT4FKuaSfHiqG295NTu3brz5BsUpkHAP
      VK3IhdlZjo6NMpOIs7mmlv2tG2itqES5SaY3TZNCbpF0bJTk0iCpxSHy6XmQJMq8ITzl7Xgr
      OnAHNqBYy5AkGbi2XFDyCFBIhumfWmSv23Vfd1YQAKLpNGemJzk9OUlazbO5to5f3LKNpvLy
      m2b6Qi5GZOowkakjqNkoNkcAV6AVb3kH1aHncLjrkGXrbZcHSgaAaXMTsGpkNDGZvHDvdMNg
      JBrh1OQEF+dmcdvtdDWG+BdP76fC5UYukWFN00TNRghPHiI8cQhMk6rgM3Tu/U0crhok+d7O
      PG48QYah88bPXsW0efiF5z9z650Tp0DCDWRUlfOzM5ycHGc2nqClooI9oSa21NXjsFhK/kqb
      pkkuNUN44n0iU0eQLQ6qQ89RHfoENmf5XV3tKaVkALz8w2+TzJvUhNr5/KeeuemHiABY3wzD
      IJrJMJOIMxWPMRWLMZtIIEsS2xsa2BNqIugPIMsypbKuaZpk4mMsjB8kOnMcmyNATfMnqQru
      x2Lz3tdM/1ElC8F3QgTA+lDUdRZSyeWMHosxGYsRzaTRDYNKl5t6n49goJxQIECtx4u9xK+8
      VsySTU6TSYyTiY+RiY+RS89T5mmkuvmTVDY+iWIpW7VM/1G3DIDe3ots2bL1ph8iAuDRVNR1
      0qp65ZZU8yTzOZL5PKl8fuV5nnyxuNyGRpKocXto8PsJ+QMEA+VUul1YZeW6zGqaJmouSjYx
      RSYxRjo2RjYxgaZlkRUbZZ4gLl8TrkALbn8Ldmclklz6tGi1lCwEq4lZXjt4BkPLg83Dlvam
      tUyXcJsMwyBdUEnk8ssZuaCSWblPqyqZgkpaLZBWVXLFAoZpYpomhmlikWXcdvvKzYHXsXxr
      9Pnx1Fx+7sRpXb6qcqOmBYahkU1OkUlMkImPkY6PkkvNYhoaNmc5Zd4Qbn8zdRuex+VrWrkc
      eX3ArBbTNCkaRYpaAc3Qrr3pWukA0IsqFocLDCuF9BIgAmAtmKZJQddJq3lSeZVEPkcslyWe
      yxHPrtznchR0DdM0MQG33Y7P4VzOyDY7LrsNr8NBvdeHa+U1t92O02pFXsnEkiQhwW1lRNM0
      0YppUqlZMvHxKxldzS0B4HTXLf+a+1uoCj2L012PrFj5+DX3W9ENHVVTKWgqqp5H1dSVW558
      Mb98v/I4r+XIFXNX3streYp6AdM0Vr6XlT8TrIoVm2LDIluwyBYUxXLlcem2QMko7394lq07
      dlNfvVyAKZlwcQqEaZropklR0yjoOgVdp6h/5LGmkdc0UiunFal8/srjtKqiGcaVDG1VFNx2
      Ox67A5/DSaDMid9Zht959d6mKNdk5lJpMk0d09CX7y8/NnQ0o0hRy1MopFHzcfL5OPl8jHw+
      jpqLrTyPo+ZjFHIxFFnB7ihfzuzeIGXeIFa7F0wT09AwdQ3TKGJ85LGuF9A0FV1T0VYea7qK
      phXQdXX5uVZYeU1FN4rIrAQmIJkmEiY2xYZDsWG32HFYbNgVOw6LHafFgcNiX3ndjlW2Xl13
      5bbyRQAmmMbK7erj/x8HefrfpBlyiQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='120' name='Sheet 1' width='192'>
      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
      kLsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAT4klEQVR4nO3d6W8b+X3H8fcM7/sSKVKkLsu2fMlObOyVLJrdBG3RIkgPoI/6oH3SJ33U
      f6B/QP+IPm1aFEUToCgStNigSLMbbNoma+/asu6DpChRvO9rpg+866zWpNaiSS5X8309MSiN
      ht+h5zPDIb+/3yi6rusIYVDqV12AEF8lCYAwNAnAJVY8OeQX739Aqd558Xe5UzqazsOHD89d
      R/b0dFzlTQVFrgEurx/964/4wR//EbnUDg839pmNJ9h/uoHJ5aGy/zELb/0hvfw2hWwL1elk
      KeolfVIi4LdTafaw2z28//Of8ed/+VdEAu6venPGQs4Al5iCRrfbZX19nVtrd9hcf0zP7KRR
      LTAbTbCyvEj2JENXt9OulfjVrz7EajGTz+dJLC2TzVVYWlom7Hd91ZsyNnIGuMSqxRM+frrH
      tWsrbG1scuX6KtVyDU1rM+O1c5hr4TS3ABfQwWnVOciUiUb8+EJh8vky3WoWX2zl0p4BJhIA
      TdNQVTnZiOkzkb1STjJiWslhWRiaBEAYmgRAGJoEQBiaBEAY2oUCoOs91j95RKsL+ZM0B0cn
      tGolHj16RLneZndznb3DI/L5HN1mhZN8ZVx1CzES5ossrHW7WC0KHQ0cbj8nh/ukq2ZWb66y
      t70O5ghqo8xJrc1eo8fdb9xF0zQ0TRtX/UK8kgsFwGSxYTWbALA7HAAo6LTbbXTFhNbroPc0
      zFYrjm6TdkfDYVFRFGXgF2EfPtrm3365/Yqb8VuzPht//We/g6IoI1unuLwuFIB2o0Kh2qad
      SWPu1mk1OySuzpM6TLGwfINC5gDFHsFlN+NxOciXqzgDPhRFGbhDFmsdHu4VRrIxAMsR17nP
      J8TnXSgAVoeHtbv3nj9e+PTf1dVVABwLy2eWDwV8r1adEGMmnwIJQ5MACEOTAAhDkwAIQ5MA
      CEOTAAhDkwAIQ5MACEOTAAhDkwAIQ7tQKwR8NsBdAc4f6P7ZEtKTI6bZhQLQazf45S8/4N6b
      77D35CMaXYjP+DgplvHPzJJLHaLYXPi9DtwW6DnCxEKecdUuxCu7WDu01cFiIgZaF5s7yIxV
      J1NscPfuHbafPMQbuYqpk6fZqJDNabz+YJler4emaQOnRtH00Y8V6Ha7cuYRL+XC7dD7B0kq
      ig/qBVJlhUTYz0cffUwomiCX3Eaxu/F7fMRCZlLZAolIEACTydR3naoy+ssQs9ksARAv5cLt
      0N9+53c/fTT3/OeziUUAFqKRM8sHXq02IcbuwhfBl1U2V+Dv/uEXI13n3/7Fd/B55RpomkkA
      PqXpsHlUHek6ZUrI6SffAwhDkwAIQ5MACEOTAAhDkwAIQ5MACEOTAAhDkwAIQ5MACEMb8ptg
      nfTBHvWemYVogK2dAxZWrpE/2kOx+/A4LHicVgo1nZlLentNcTkMFQC916bY0LDpZTZ2qly9
      uszB3jq6KYRSLtCoaBw2O6zevvO8FXrQFOn6lwysGYamaRfuBtXH0JZ93naL6TBUABTVit+h
      srNfIBAKfboLK78dJKYAuo722eAx8dI0TePvf/wBhVp7ZOv8gzeusnZtfmTru0yGewukPDu6
      JZavEp9xs7m9y8KVVQpHe2AP4nFY8Lod5EplwiE/uq4PvD+AMoaEqKp64TOAMoZxCefdF2EQ
      Xdd5uJcnmWuMrI43b8/LjcoHGPIaQCG+eOX5o1u3bgHgXr52ZqlwyDZ0YUJMghwWhKFJAISh
      SQCEoUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKENHYBqqcDxaQFd65FOp+npOqV8lnKt
      QbPVBL1Hvd4cZa1CjNxwvUB6j+3dQyxmqOSsuP1+tne2aTV6KJzgdDkwdVv44ysjLleI0Roy
      AKDQodFU0E02lsMhKvkj7K55TN0izUaFSl1j/qrlazM9utbrjbwOTdPodrsX/ptR0zX9wnUY
      xdDt0FaLFV2B6IyPjx89JrZwlVxyh57DSyAYYTlh5ShbJB55Nkf0tE+Prg6o71WoqorZfLGX
      uDeGICqqcuE6jGLIAJi4cXvt+cNQOApAJHDvzGJx7/CFCTEJ8imQMDQ5L4q+NE3j/Y+2abRH
      95bs5mKYRDQ0svWNggRA9KXrOj987/FIh2b+zZ/en7oAyFsgYWgSAGFoEgBhaBIAYWgSAGFo
      EgBhaBIAYWgSAGFoQ7dD72xvkc2VubayyGEqQ3xphVxyG8Xhw+ey4XVYKHeszIbkTulieg3d
      DLe8cp1Ob4NCocTttZvsbnyC6oyjdovkckUOGjoP7t+TduivaTv0WOrQL/56jNvQrRDlbBJP
      OEEvn6RUKqOZnHQbZdDbOJwenKYG5UYHv9MKSDv0y5qWduix1KFc/PUYt4HV1Ot1nE4HjUYT
      h8Px4h+6gsy5XOj+FfYPklxduUbpNAP2KA6LisNhp1KpAdZx1i/EK+kbgPJpmh/+y49ZubKM
      L3KF1+5df2EZl8sFgKKaWVpaAiAYiZ1ZxuOR2yOJ6dY3AO5AhG+/+RrNrsriQnTSNQkxMX3f
      gKsmM7lcHq/HjUnuLCIusYF7d71wzHvvvcf+0ekk6xFiogZeBF9ZvYNvtkCjNroBEUJMm4Fn
      gFIhx/FJAX9ARraLy2tgAKxWKyazCYftxY9AhbgsBgagUK6ytBAnmz2ZZD1CTFTfa4BcNstb
      b3+H02wWszM46ZqEmJi+Z4DNjcdoqpWZgIvd3f1J1yTExPQ9A3zj3ho/+8+fopsdfPd77066
      JiEmpm8A7O4g7777LrVGE73bBfOL/TzddotStUHQ76VQKOIPBmhUyygWBxYTWMxmWu0uNpv0
      AonpNfB7gP/+r//A4gywvHqHhS9OZqRrrD95jG8mSrN0SsdkIV8pUyvWUEzgdjuw6h2c4UVs
      tnFvghDD6xuAjUf/w9FpBbdbJ9pqv7iA3qNab8NJhq7FwdqtJXaePsTpX8TUKdBsVMjWNV5f
      tsl4gGnow5fxAAP1DcC12/fRLE5WriyzvZt6cQHVzEzATa2lEQ97ePTwE6LzV8gld8Duw++f
      YTFmIZUtkpDp0S/0NzIeYLL6t0Pn0nzw/vs8Wd/k9be/22cJhas3bj9/FJ6NAxAN3T+zlGt0
      dQoxFn0Pv75wgsVYkFIuyd5hZtI1CTExA89HN9bug/qIyExgkvUIMVED34A/fvh/OEIRipk+
      1wBCXBIDAzAXi7Pz5AkzicVJ1iPERPUNQD6zx+bBMW5fCJ/XOemahJiYvtcAm3spvv+DH6D2
      Gnz4609447VvTrouISaibwA8VoV//qd/BGDttbcnWpAQk9Q3ALfuf4tb97816VqEmLi+AXjy
      6w/4aH0PTde598Z3uL0Sn3RdQkxE34vgm998i7kZF+1GiUqtNemahJiYgV+EhWKLVGsNzMro
      e0KEmBZ9A6DrOi63h9///p9wmOrfCvHxR/+L2Rkg7LZwcJwjPJcgd7iH4vDg9zjw2FSaJh8x
      mR5dTLH+zXDZJD/5yU+JJxLcfdDvUyAdp8NJsVrhpOfg3r07bD95iDN0BVMnT7VS4OhY5/UH
      cWmHnoY2ZGmHHqhvAHyRee5cW6DY6FEqlyH2hX4gXcdstUG5jsOqsr6+gd0ToXS8B1YbPo+H
      kAeOcmXmZnyAtEO/LGmHnqyB1aiqGZtV7b/jKipz8QTRuXksFjPtVhurzUovGgHVhKooqKpC
      rzf6o4gQo9Q3ALu727z1zu/R07SBR26z5bdjfW122ws/g8FHfSGmRd8A7Kz/hvX1DQCurz1g
      JRGZaFFCTErfANy5/21mZ+W+AOLy63sFKju/MAq5+4UwNAmAMDQJgDA0CYAwNAmAMDQJgDA0
      CYAwtKEDoOs6h8kUvU6Lrc0tWl2N49QBx7kS1WoVrdeiWK6NslYhRm7I1jyd4+QuB8cVtEaV
      SCzG3s5TepoTpZSm6rCiNZvEr9543gY9qB16XC7+fOOpb9LbPYjU0d9QAdB7XfYO01Srdcq2
      eeYcdlStjWINonbbtBtVqnWNZZOKpmnnjgfQxzAeYJhW3nH0v2uaduFaxjUeYCrq0C/+eozb
      UAFQTBbe/NbbHGUyBNw21j9ZZ/7KKrnUs+nRw8EA19x2srkisfD506MrYxgPYDKZLj4eQJXx
      AGOv4+s0HuBlxKLPeobW7j7byf2rt87+3v4qaxdi/ORTIGFoEgBhaBIAYWgSAGFoEgBhaBIA
      YWgSAGFoEgBhaBIAYWgSAGFoEgBhaEO3Qx/sbpMtVJmPzZA+PmU2sUguuQv2Z9Oje20qNcUj
      06OLqTZkABR8Xg+HmTz5coO1e3fYWX+Izb+EqZOnXMqRquu8/mBOpkefhmnJZXr0gYYLgK7R
      bPfw2c0o9Njb3UdxhqjlU2BW8bg9+J0aJ8UqswE3INOjvyxph56soc8AHo8bh3sVj9tBuVzB
      4/XSCtdQTDbMpmc7YbvdGW21QozYcAFQFJxu7/OHPt+zm2A4nO4zi1mtZ6dLF2LayKdAwtAk
      AMLQJADC0CQAwtAkAMLQJADC0CQAwtAkAMLQJADC0CQAwtCGDIBOuZBl9zCN1uuwu7NLV9M5
      PU6RK1ap1+voWpdKpT7aaoUYsaFb83pY0OpZNp4WmY3H2N7eoNu1omgH2Jx2lHaDyNLqKGsV
      YuSGDkCzVsTsDqLUK3jcbk6P9rHYg5g6XVqNCtW6xqLFJOMBpqEPX8YDDDT0eIDsSQ6L00t8
      NsDjT54QX7pOLrWDZvcy4/dy1W3nOFdk7kumR5fxAGfJeIDJGrId2sTd+w+eP7wbmAEg5L1z
      ZrE55/CFCTEJ8imQMDQJgDA0CYAwNAmAMDQJgDA0CYAwtOn6UFaIPh5vp0jnKiNb36zfxdr1
      eUACIL4Gfv7wgH//1f7I1vfO3bnnAZC3QMLQJADC0CQAwtCGvgY4Otyh0jER89nYTh4Tm18m
      l9wBuxe/x47XbqKqOYnK9Ohiig0dgNn4IqXNDU7yHdbWbrHz9GMs3gVMnQLFQpZkXee1B/ek
      HXoa2pC/9u3Q/fedVyjkeR1D3yCj2WjQqDdweU0cZY7B5qNRPkFRNVwuDx5bh1ylyYzXAUg7
      9MuSdui+fznqQp7XMfQZoFatMDMTYTYapZjPM7ccp1YuoFhcWMxgs1ppNJojq1mIcRj6/gDh
      2djzR5HZCAAeX/DMUg6HY+jChJgE+RRIGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGNpIA1At
      Fag2WrTb7Wc30262Rrl6IUZudANitCY7+5lPWyEcWLQO7ugS9pE9gRCjN7ozQK+OwxvBZbPR
      bFRIF+r4nHKjbDHdRhcAi59O+YCmruIPhFm7Ok86WxzZ6oUYhxGOCVa5dfebZ34iU4OKaafo
      gxr1R+Sz8QCq2v9k02x3qDU6I3s+k0nB7+7fhHdeHT1No1gZbfdqwGMf+Hzn1VKsNOhpo/tv
      cTus2Kz9j3VfhzpqjTbN9uimVbdZTLidNmACAYDzN26SpqUOXdfRdX0qapmW1+SrqmMiz3iR
      DdvdfMKT9S16Y8jlF+s4zSR5/OQp7d6Lo58ajQYAheLnr2N0tra2vnR8UqNaoXPOgCpFUc7U
      Ui+ccpQvUTzN8cXjnNZt0ez0vlAHHOxu0e6eX4mmtanWzj+rDbPT6b0OWzt7n/8JlUr1wut5
      lTrq5VPSxwX0XpunG9tomg66RqVau9B6pm5eoEarzUw0Qv44hccXIleqUDg+JDAzSz5fIBJb
      4ORwE4snRNBp5jhX5sbt21iGiPJR5pjo/ArdepGneylCswn0Tg0d2NveJHHlJrn0LhZngDt3
      btAqZMgXa0SaLZIb6zQ6XSwWK/F4jOPMEeGZGdLZIgGnE3+kx/pekvjcHEdHaSJzS4QD7r51
      1AsVjrptvF2drtrlKHVCNBYlncrgVJsc1J3EXF1ShwcsrNzEa9cp5gvgKNKtHFMs17BaLUTj
      cbKZYzzBCNXTQ/yzMehaONjZIBRLUD7NYPWEWIzPvtL/Uek0Qy5fYnGhxZNPnjK3uEirWqdS
      zFKodbl149qox3C9IHOcp6mBrZniMA+W7adYHF4Uk4ls+gCzOwjNMg3dwvWVpYH1fPXnvi9Q
      FBVVNVGvlmm3W5SrdezuAJ1qlZXVa+SzWTyBGZRem929PdA6tIccvbd68zbF9A4bO0kWrt2g
      nM9SqZQplUqEIjEW47MEwlECThs9YD+Zwaq2SaYyONxBnC4XsZCLrZ09eii0amW8M3GUVoPk
      cZaV6zfoNSp0u10yx8fn1pKYDZLK5DjKFrh56ya54wPsnjALiSiLi4vYXV6uLM9RrzbJHR1Q
      1y1kUkkw2wj43czH45wktzitdum0O6hWJyGPlXI2hTm4gM8O1UabdCo93Iv1OYepI+xKnb10
      AbvNQq1aoVKuUSwWySbTtF/5Gb6ErpE5SpPLZLC6fcwvLNLTVBLREJVqnbaukIj4KJRrpJPn
      b+/UnQHsNgvZk1MSsVmS6SOCkRh2i4rDorC9tcPcwjJPfvMh89duEw54OSlUsQ45nDd3ckTP
      6mV1Icb+7iaziSUKmX06FifxoJv91DHBQAAVMKETnlsgFAqSy51iMtno9pw4rSZuuoMkU0d4
      gmEUmwPMYSI+F7vbW4SCQWz2FsGZ4MA6nMEAZp+fxcUykViYjacbLCzdoNtTsThVOieHRCMz
      WKxWPIqZdjPA6w9WKOTzmEwmFF3DbneQuHIT02ESl9uJ1etANdsIL1yhdJqibA3icNgJhf3D
      vVjP6cwtrhAMBsmfnpBvKDhdHtx2F7Wyjmney+hHV5+ldRvc+MYbeKw96vUmYa8N1RlBUU2E
      ZwJ0a0XS2RJulwOnJ3Duuv4fMedvhIjrfecAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nNy9V3hdV3bn+dsn3pyQM0EQBHMURYVSKuWSSlXlCnZV2WW3Z+xuT9e4Z15m
      Xv3e39ftcbe77R6P7XIlq3KQSiqpFKhEScyZBEDkeIGLe3HzvSfsebjIAEGQIkWp//hAAhfn
      7LPPPmvtvdZ/rb2OeP7KlIzbCncaqoCYpuAAM5Z7c40Uczww/jMuFWI8XTvJWE7lNeMz0NCx
      cIh0HISqAlA1/D4ShSZrlCHPZmYb9uC7fATXH6EQbgZvAGF4ll1CT47QNHOW4fAu9k6/ye4a
      l7OTCnvqXEAAcCrl54zaBQ1bEKZ34Vzv2FkO6Jdob9DmD/1U4P1LCkJadKudUL8FpIvwhz+2
      69fpZQ75iwwUdfYEIOOo/DppAFCrOTwWKVNyBb+Y8eDcYNta3FYYKqu3vtcbRFgTCAQp2yUv
      FRwJ09aNSYeUEgpZ8AYZNx9mU/4MerafJhfsRD1jVVsrx9kWbWefZ3DP7yM0g4Rai8xnONX4
      HCgaoiyQzffxTM/f0J7Lcikb4bWd/ztaboZAZoxU0342xy/yWfMovxie5lJimmA+i+nA6LDD
      pqgABNVZhaHWpxAiAOUl/Yzt4cp0lH8T/wXSKlMSXpK2j7ub0rdwRG8tpJQYNlRFFQaHMnSr
      MUQggtA/PpkZKXu4nDf5ek0BTRUkSosy225a5F3w6wojloIlb0x2tNvR4etBBQxFUHAlKoKg
      JkjZkLYlBVduuB0pXfR4H6KY5e7J33K2/Ytkarro0zy8PdJHylNLvOHQkgtr+H064bEzpFsP
      kavuBJZPxsL08lb0Kd6381hRA6EZ+DLjfKP4c/4uWU9faC8940fZqQzyklPH+3GXP+hK82a/
      hkcXGJrkgtsCnsDyvtplRO9xcG1+WP8cykQPmgabvQlglk/qkiCE4O7tkhODOlebn0aE6hC6
      8bH2wZXwR7V5okZljN5OL4rtsazBuxmTg37rhoUfPmYF8KuCnCOpNVQ0BUaKDkJAxqkI/Y0I
      P0AwfoV/m/8Bhiq5GvByTPUirTKWK/ndjr9EKMtnKSEEfVWHaOr7HenGfaDpqxuVkllLQ2nc
      v2D+5Lw1/KjwEASimMlhzuVjfKk5zl8Eh9HUygPyeTTOxSVJLcK5g99aMLMWrq3qyLbddE2/
      Tm15EJ9ngnu237mV90axr6VAJP4jPhzfTE/rlz7267+fNXmqyqbkwmhZWZgv8lIBCR9kjZua
      Q26rAlTpCqYiSFkuqljsX1lKnDljLXGT9r4sFXgq9QKhoIvlKvgUi7Ji4JvuoRRuwl0i/G5i
      HKWqAYBSTQdXq9oRyhK/R0oQAunYmMd+yR8Ez9B9tY0rof0kmw7gVjUz7Y+yaeIoX3ZeJ9wC
      oGLOjZ7rOtzXVESg8MFUjtSx7zB84JvL7H+EQKgazVqcVk+K1rb5oZd8Umd/ANuuTErvDoVo
      iZSI6PmPvxNCcDKvU3bgQNgFsWK8PsLw3VYF0ASMlxyqdYWcI4loCiXXIWG5CCqP/mYgHZvd
      3c+zI5aiN6kyW9aJ+QChEsyNUzYj4ItUjp2d5v7+7/Ne6C8Xlm7PdB+WN4oTiGF2v4uaGqfo
      r0U0dmL7Y5gaPB0cYHNqlJ9KnWorjjHZS5MzQY8h2FYj0eb0ZzLrMpkVtEYE9QE4WFUgpo/x
      XasISxUAwPDyeuT3qR96jYb4FI92ZvB57jwBsR76Jg3OTEW5tPmLkJxAt7N3rC+TjkJ3/mal
      Zm18JAWYVzxTgZIL1bpCynax5vroSIhqCpaU5F1JoewsCP1N34ZVpqP/ZZ4JXaVkCy66LURl
      gt/4nqFr6h2wSkxGGioK5jrcPfIzdoTSvF/MIPUqAOpmr1A70seJ1i/gy4zytP88qYIgO3ic
      I5v/hFf7R/mKcYVCyeHb1vNM5wQvFeo5bW6h2ZriwpBLu69AoeRy2eikliRvutv5WvZdipbD
      j8JfBn9kze5LT5C0XscXGgfwGAJXVkYiV5BkS4K6MCjKJ2dF2FRb5ngxgic1iaO4CHmjPMut
      w5StMpW9tWbjDSvA/MxtCKg2VMZKDkFVQSApuhJ7iWRPWy6GgPLcZ7dEdwfO8nvGMfpSKinH
      pCe0jUykmhA5mqdP0RaF5iv/lbeqn6Vc3U5/aA93FQZR03Es0w+6waTRyLbyUYI9b3PYuMqr
      kzX8u65x+rJ5hMdH/9bn+OueD3AbO/j8zE8JyllafQWuNBzmcus3kVJytVSAbBKqGpgRCm4q
      zm/H0owHN+PWdSJWLtPz4ycEueb9XJrpplRKcGSqlWZGOVfeQrpuD1WpEe7Wz7K/Mf+JUARD
      F9wX6iFVGuUF6yHKBefOMCe3Cde8F11Ag6kyVHQIqQJNCGZslwZDJWm7WLIi8ACKgKIrqTEU
      ylJSWmLWl2/tioUbquW/zjyKPXWVtjovXlPFn+nBzabwqQ51XkGbHqcw9HPe9f85GUcnYMKB
      kV9hjRkUIm1can+Wty68TVT2o9TZ3BuOAwJHVuIEWGUsxYDqVo4W7+GpzCvYpRIlX2UFEUKA
      x4c0vZBLgeuguA6j25/Fe/yXFOo61r0HYXg5Uv1N3pnsxamO0e/xL7BGU7TyQm4HJ8+9xte7
      Bgl47rQSSDbVSEYTWTTVxPa23eH+3Fqon/v3//dfzTqr7dBqQwEpyDiSsK4wbbkoQFBTKMzN
      9KYiKLoVRXCBnCNxbrHAr4QIhLGq23DrtzAT62Lv4C+4VH0/O5Pv41EcNkUrHWj15rk4o5MP
      NpCeLfBMzQhB8jgS+mruwa5ppzV9gYCpMJx02VrlMpMXnE2Y+IRFpBwnX7WZnDR5Qh5jd43N
      8NVRCqoPt1REsfJsHnyVr+Z+zb3FY+zNHGM6kWd62xMV9ugaK8DCfSgqMlSD8ARAW04rCsND
      JtJJd3+Bg1WTd3QlcFwYnHBoqRGMJBWS1XvvWF9uB8R/uZCQKwNhKpXZXwKTZQefIkjPSbYh
      wJK3yJz5iJBSIqwitZOneCz7Ku3BEqfGVRoDDg1BSBUFpiYpO4Iqn0RK+EHxXrKuQTy2A8sT
      RkrY8+Ff85WuEj/rC3Na385d9gWe3ZTln+zP4kr4c+MNQJLIC1wEGUthOO/hgfocqgLz3lCy
      AN8TjzHV/uAtuT89OcRfhn+M33tnHeUrQzZ512DQqqbPbiHTchihm3e0T7cKa46sC4yWHEZL
      DrZkQfihYtJ8EoQf5kwRw0sy3M7v7L28NODnhNjGq7lO/rq/k9GCSdAUpG2D8axgOKsxFNxO
      lRXHtLIIXwjFH8IJ1XIloZDRI8jm7RyuyaIpgs35K0yLKI6UCCGo9kOtX9IRcXi4cV74F1F0
      VdLqrUsRsLxVDKR9t6y9m4GUkq0tCqeT1Vxwd7C3/D6Mdd/RPt1KrOkDfFIEfKOwQg3Ed3+R
      SetzBNLD7In/mrtqJyk6Cv+cuZu+pgfBsUHTEf4I52q2LDv/4r4/46IAykUUReGXiX18ST2P
      6toUo62c6lFpC7lM58FFsKtW4rgSyxVM50BTJPVBwXhGYta6lG7VjXn8/Mz+Gtr4d+lquDNP
      RQiBlNDqDDDuv5e36/63/2lmf7hDqRA3AyklZJMEZodoLg4w6W8nVb9nma0tdANclzoly/lc
      FW+HHiG56cA1GZmF81QVKSUyN4swPAzH9vJ3nkPIKhOCMX61+S+oygwgTYX65AVGJlLEy14K
      mPhiUYqKl4ZMnMvRTmYb993SsJYMxBid7mSrvHLd+7gdkFIipcO2NpX88Auc9Pwhwhu4/omf
      EqzpA3wSIa0yT178T9xdlUZXYbas8mq+iym1mpBaorv1KZibmWQpD5qBUDeu37KYR5YLiGAM
      IQQik8BIjVCOteF6Q5WDlirbit/no8m3GtIuU3/2B/zZ4Zk74AxLyrbk/LDCxKzCYOgg8cb7
      74gi3i58alYAoRuMaM3cr14EIGw4/J5+kVRBEPMKfjWY53j71xCqijCvbTdL11mWIyRLBYy+
      Y/gy41Rl+ug/8Ce4ho9vjP53ukJFekY8TLkhTsgOprY9XUmhyCaRqTjUtCxeSwik6y5PsbgV
      UDQSwW2kcu8SC348gielBCSWLVEUQSKv0uvbR/J/MuGHT5ECSMcmhX/ZRKsIiPkkAoVnvBeJ
      D7/J8KZH1zzfnRqhPX2eBwvv8krkc0w234uUkqq+N/kD9T1KQQhUOXwv2Y0tdLyyhBCCraES
      bfYUH4r7QAjqR97ji4XfEvO4/N3ks5T0AA/NvMyUG8AtFhChKlAUzsfuo1jV/pHvWygKVts+
      JjLHiQWtj9zeepBy0c84OyCZsf081Jnhvi0W1sgAx8WtYbc+SfhkJ6IshZQc0q6CWOkMVtIJ
      LmZD5LMFNl99cdmDrJwqiU5dIJuapconCJemFv5mBoKcmlBoDUtG7RAJEUaoGo2hxZD/mWyM
      mfq9GNP9fMN+mcaAyyuFLuT0CE+M/yuHo0kOekYRdpFng908F7jMlxP/isgmb8mtC8PDaWvP
      qvu6HXAch3fOFMkXHGZtLy/2NvKDyQc4GXnmtl/7TuBTowBKeoo6kWIlR2U7Ci/GGxgrmfwv
      ofd5oHCU8NhpzIkrkJ8lcvUdsC0ecU/yJ7HznByD/uh+pJR0dP+SyXAXswQo2nA5G8Y3doFg
      bhxVQMmRuFLyoecAQtPpSh4jYkoKFlxwmghNnMen2SBcGvwOGTVEsiiZyGtElQIt40dv2f0n
      RIipzO1/XEJRaKjWOD8dJTc4QKqoMx7YiRuouu3XvhP41JhAocwwjQF72Weuq/Avqb3c7R9g
      V2AGpMJgOcRjyd/QGSryt0OfpTN3lqH8NFk1QNiTxxf0U440gXRpdcfZPvJdGuuyeDTBl+qH
      +Xm3l37zcdIl+NfZ3ViRBuJNd4Nt0VIeAWC6oCA8Pr6y3VpIiUZIqoMq/+z5MhSy7Jl5mym/
      gSwVlqdF3ySC04OUvRaVMOXts8PLFmTyUB3R2b3FS+/kKP2Off0TP6X4VKwAUkr2F07MUy8A
      OK7gTMrPhKeJdiNVOVC4PFI/y76qIl5N8mDuLZ6sm+J+vZe4WpnB2r1ZyM8iFJUjzV9DOhZN
      QRchQFMEe2tLZMMtzFoaEb/K1KYHEYYHNR2ny1e5TkPAwUlM8vaEH1Or9Gc6B2eGSpROvknk
      6tscqCrwl4Ej7On50S0Zg/HZPD6PfVtjNEIIPIZgX6dKk3+WN2a6KKMj3Zvco/0pwKdCASjm
      kKUCrlzcRZApK/y69uvsdXrw6fNiISpsDBIhJIcbLQxV0KynGcsblGxJrV+ipycBcAMxXuz6
      D7yVbUZKsB1BOi+RngBvDRlcqrpvoQu6W1rYAyAAs5BgazDLVFYACiFTYadvhqcbp/E6OQoW
      +HTYK/rxjJyr0KQfAU0tISIBbWGDyq2GlJKL/WXsOdfn0GaXL23qY9C3G4Kx23LNTwI+FQog
      vAGO7Pj3/CR3AKQCUiFj69jeMFa5zNVZk6IlSBbmhcNlqa8Q8bh0yWEUIVAVwd78qUoekRAI
      w8ORhi8zkNH47bCf90IPU584z6G6InXJiwttSKGizlkeqiLYH81xsdxAtb/ymaHCU5tt9tZL
      PtsBYU+lDwMzDt4rbyHPv4U6M3LTYxDTs+RLDv/4psqxbntNhzifL1AuW3PBq8rf5392HBfL
      thd+lxIcx8W2F82b5lqFd8+WGJp0kNIl5reptwbBvr3s053ENbNB14Nv5BJ2uQy+0G3q1hpQ
      Nab8bbROHuNtu4s3Qo9ix1oYD22lf3iGwSQ0m3lCC1VMFMScuSQEdATzqHOBpLG8zkD1wQVO
      W5o+xpNlhpsfJBXeTNfAb7i3LkuHO8yHbAdvECklytQgpVyWaq+k1ZNFIqkxi5V2hEAIiRAQ
      MMHQAATxrMTJZajL9vF5zzmOm3sQxo37BCnbz4V4kFknQIsySWvdcl/AcRwsy8KybQqFIpls
      lmKpRKFYxLItSuUyruOQzmSxHYdiqUS5XEJVVTSt4siYukI4oDASd+hOh2mNFlGLGcYzBsVw
      600+uI8X0nUqz32D8YoNK4CULjKbxJwa4vdP/Qv5wSuIxBi2lDiuU8lnv91BEs3gjNvGWMv9
      2IHayme5FH/qvMhn6nOEPJUSK/Nfy7H42Zjtozd8YFlALFfVge2LQmqSf+N9B0Or7In4sLwJ
      O1yPq3vITk+T1iKo6SnqAi41ZmlJYGhuxqUSRBIoIAStEYW6gKAuAK/2uJiFGbKhlht2jG1P
      lIIWxjV8XM2EqS6PUhuplGEBEEKhbFkoisDn9SIA3TDQNBXDMBb6qaoqHo+JoihIV2IYBqqq
      IITg3FWboUkH29V4q/oPaM6dp60GBrJVJIPr73FYhiUW6ceBSppMCnnqFdSzr+PqHprO/5is
      HoZAbF253JACSCnxn3qFz538Pg9NHCcsbBplkT2FMe6aOI09dJnxmk5kIYtayOB6A7ckYuhO
      j6IIFlIcAPBHlrUtTB8TySKDo7MMUcsRdjNoRQiUU4SM+eW9svF8XgHq1TRTl6+QCGxC6h7c
      /nMosfrKoYpC9dBRGoISVSikk2lGag8ghIJZSvOH2hGqfC5SylXZoABTWfBoSqXfc9f0G1B2
      ACmQmST7i6cpFEpkoptvaDw2jf+Oxz1HKZpRBvMRdsdmFlY1IcA0jAWBNk0DQ9cxdB1NVSs/
      GwamaaCpKrquYZom6txNpDIO5/rBb0qcUBWDRhdqIcVEf5yCEWEmvH3jHV3Uy9sOKSXuhy/g
      Ofdb9oWm8foN/KkBtpgJOkpXMOO9JALtcI1Vd10FkFKijF9l55lfsW/0OFt0C1OpCJOpSDTh
      oglJGwWaBo+zpf8o9468jzU9TtoRKNkUTiAC6WkQCmKtMiRrITMDyXGE69DU/QLpxn3I3CyU
      i6sqtSEEs5F2ZpUQGjbV9jQpy2A06bDJm8bQJMtdHRdVgV3hDE2ZK/RMWtjNOxbalYlxvuo9
      iapIEBI7m+VCLooMxChGmjg17eH4kE2VksOvuWiKoHtK4LgCTYXxnM7LyTbazAwejQWl8xuC
      yYzLvgaJXbbombQQ4Wosb3RDQyJti5rUOaZTNp9tGiFQnqE6BJp6ayStWJaoikvfOBS81bRb
      V7gkdtFv7mKmdv+qTTt3ElJKnL6zMN4LY70Epq7Q4Z3lgQ6LYsHhweYMDREHQ3Fo9efpz4Uo
      RVrWbGv9OEC5yFPH/4XtZBHG0nVtuQOmCNiklisUNfB08gxy5jQWgsvnq6ktJpnxRHnl7j/B
      qWpcfUOuA0IBxyI6eZYDYy/xYamVFn+JJ2uu8v+kpxB9pzDCUWSxBiU/S75++4LQGvGrfNv5
      CSH/kjajS/u4msazXMimMuzNHuH9rkqI3zt0inyggeOJGPdEpxECJtQaHDOAqhsgBPkt90Og
      ge8XC9QMvY+mQtjNMJWJUNa87NDG6K0+zCsjKX5v0yxLC6jtaRCUHOiZhsdqx7l49UXOx769
      7iNYQH6WxxsH0FSF53s3I+JD1IVtGqs3dvr1EAlWOloTFdRGKyzZPdlX+f7gbhKeG5j9PwbI
      fJrwuV+TcTx0RIp01JZojgmiPjjQWKB3ysXrgXQWXk82U9pWi+/i6xTbDqwqVrDuCqCOXOG5
      +Ps3ZdoLUan3WecWCCguNW6e1v4P8WZOE5u6QDzcBbqBLObwHvsZgYEPaJs9xzc975AuSZ5t
      nGB3MIlXByc5hZqOo2JzsHiCb/o+IBK/TI/bgOsN4gSqsCZG2KzP4EpJJR9tNUvSm/ESMWyE
      gA9HVd7Kt9PT+DCiqhEKWR7u+yd8iX7eHvNx3txOpDBBrVkkPTJMMl2G2raK+RWIoqgafype
      4mAoSV+8TH/roxCIMlG9F8avkop14s2O0+QvLlxfU8FUIZ6F3oQgbjaSq9+xqoDXmtB0xgem
      afdNMUITRWnwUEcG5Rb6XR5Twe+ttJcrSH40upv45iduWfsfFVK6iOQ4wWPPUyNSNHoLPLNL
      srVBIeyrPPf+KYeuNpW6qELRdjHSUxwun6CxMMBQEuxg7TIrYpUCSCnBsRGZJHdfeZnWUuIm
      u1vhxxcNQgHSpbq+zL3VKcx4NwNqK3rvB3wr9CF3RWY4EE5gapKGgIOmLPou7cYM24MZdpvj
      dPizCAENRp6DxRN4p3oZURsZDm7jaDLGe57D1CYvUu1dzOWxHMlg1uDH4hHGswp1MkHYdAm5
      GXqq7sEd7aVz+n2eqB5nVyTLe2IXhaa97Msdpz1s0WQUOD6hsyN3mqS3Cdf0IwX4hk6yLVqm
      I+qSSswyue1zaKUMqlVA9fkYdKpoLAwQ8VTiEiAQQhDzwekJUKvqyPobwONfPXwrR1NRyQQ3
      cabQQaL2AP5kL12BBB7zozHZ83TpAiMmJbM5hx+O7We85dFPTPanLOXh7Ouo8X4OmT3sbamw
      bb1TLroqCc2Z+CNJl8aayoRyutfhniZJW0zSEnZRZ0a4K/8BtYkLJBw/JX/NahNIJid5/Og/
      0GTPUi3sm3RmBAJljhGB5bNxhSq8LzzB1tR/Y1g1KFgKTWGXtWZtmHPwNIk513blP0nQFDxo
      DrI79d+I53QMDV4sPkpCBsmWZ5jKCTLSyynPfqbxcr88Rxwvf698iaBeJmPkEL4Qan6W0eBe
      XptO8pnQKLvo50KmntOlRjoYojYgqdPzPKAPUTua442uv0DLp9BxAIGuSGJaAaTE0X3YtZ2I
      UBX1Pa/w/clOvu3tIeqVgItEQQhI5SUJrQ0tENv4EBtenGgz3sIMjaEy4eDN7+OQUlIoSbzm
      vOC7WDYMJTVeSd/FVMtnEOKTESaSUqIef4HAxHkwfYRbJU1RweyEQ1XeJR7USOQkjgtebyUQ
      ioSo4RCe930F3NPmoAoXGOFA+Qf8fOihNXyA2Wk22ylCys0UQFp0/+fpwJVCvfS3ao9NtceG
      dYuarvQ5Fn2ReQWLelyinhLpoqAhfoKX27/KS+UirreMEmtATQzx0OwLFKTGwfA4F5K1TO//
      HMz5RVLTKRRy5HIlXsjVcbn9c6ihCHutFxbup9M7S7VfcmooiZgZI5Do5oGGEgLBhbjgvegj
      CE3HsazK9ktFQfP50Kt0vjNc4quNozTN5TIFTPhfD8EPz73MsMeH2rZjwwVnRf9p9udfZlO9
      xkdN5bo85NBQreJKlTOJCN3eA8yGOhAt/k9MsUYpJWLkMlYmjRKrI1iYZGTCRe8uIwW04zKc
      d4ge9FBfpSxYDSupD6j4qhKJQBAyHH7fen21CSSitVz2N1E31UtYXm9362quffHyi0I7L6hl
      KXCqVCLeFeesO9rX+uNq5TqdDPFuzbO4hh/FG8QszFAzfJSU44VsiodqZ2gMubTKCSITZxhR
      GsCxic72Y83O8IR2mh3hHN0jeb5afokt4Uq9TxBsDhZRBLzjvR+nWGTXzFE6w5Xa5wFTcsx3
      CMdfhfCFEIEI9cPv8efGK8wkZsGxGNQ3scebmHtALl5dYVet5PLxi5T7zuM2dV03NiClpDXx
      Hs3mDGNTDq11KtpaXOwG0ZsO8dPSU5xydzHW8BClQD3iE8T2AMhsEjeTQjRvJTrwLjV2idaC
      zWZFEpsLPIalZHBG0tiuIcQc+SwEqqkwPeOskLdFZk5TrzGF5Ft28nPfn/ONd/+GGlFe65D5
      7l3zd3kNc2btYrDr5bfMH3+tY8TCMYeqZ+kqfZdEwsQjLGIeB7UBftozSLnkUhOotNEeKrNJ
      TnJ34X9QzClEDJecoRAIStJFSUYN0uCzWPRjKtcRAu51zvC8+Qz7Y9mFVc5vSB5JvsxLVZsX
      tmEadp6SgNnanfQ1P4qRjpPLXiJoCuRcm15d8McHYDqf4MjJ7zJ46E8RvuC1h8Iu0yKGqYm4
      bGoQ6LrLAvV2gxicUXkr8hWE/5Od56MEY8hAFO34r2mPubSOOzQoyyc/Abi2XNgsNS97VSHB
      pcnVsjO/CsA6uUBWrIHfNd7HeTVKTl4jTsBqQZdzX2sfv9bnG0nuWn2MK6Hsqkv+JlEERDyS
      jlCRpqCLV6/k6DzWnCWVs0guKWwsBPgNSZXHQVUg5HFRhCTsgS95Ts4ZcwrMDdb813b/LF9N
      Pk+NzwZcHFeCFKTLSoXKncNI/WH+2vgWva1PIgwvmlOgJJXKQ1oyAUR9UB8Aby4Or/wD9oX3
      rp04V8zRVlWmrV6lJjJPMNwY5nOBTsw24/g2FoO404jEe9ieO0ZLFYi5hEgpQUqBZVV+Nmyw
      59juhYh/wqXRVxnLoZRCPK8viMu8LKpf+MNv/VVSX57TI20LZfgK6cYuhhwTX3YSVUBALiZO
      rRTm1akHq2FJgVOlrVqSlmO1si3VWEcKCq5G2qks1aay+GqixZ5UBHcefgMKZUlrtKIQ60EI
      QX1Azh0339by1gOGy1BaRVfg+KhggireaPsj8CzZi2x4sAM1lQpwpQLPxH9IuzfLjK2hi0pZ
      lXcHIeKVhDwKW6rA4+Spz1xlpGrP2vuadZPC+ATbq5ILG+TFBleApWzPUELld8Yzq17iseZ5
      trUmTStTk5WqdrcZMj1Dw+l/4Ys7i/RfzBOdyVMqlCmXbMpli1KxTD5fomgJlAaFoF9dkJVc
      QaLZLj4DvBr8fHIT41RTJTJ4NReBQP37b7b/1dXxNLnIJgSgxQfpeOe7fGH0CJfMekqhWvTh
      y2wij08szXdZDrHEKb0WypJrKsD8uWKNzwBsVyHn6JSlgouCLQUSQdHVUIREW7ZVcrUyNgRB
      VVhIaZ532MUSE6fy70qBVxZYBagIUMEW/Kv2FKenTa5mvFzY/EVEtG7Ne5bS5aG+f+K+4BgC
      BVuCIirvR3hzppaLdiPZRIKwR6CrgpdTrcjt963NwDgWD4kjNITmei+UVf29Fi4NOngMuDzt
      44XyZynHNl3/pMQIkaPfwfB5KSke9MIM6uRVjMIMTyS+R3x8lmLt1ttKlTrdx2nMXEJ1yiiD
      FiFFYJg6qqIikWiaiqppZAydqk4Dn6eirAJBwCsYmHSp9VeefZM+yzvm/bwVetGdSq8AACAA
      SURBVJKebAg7n0UbTgmSwcpg+M69weeH3qDRzaKo8GfdP6aMgldz0Ra86xsxb1Yes3GsbE8T
      kqBaScudtjxLPncxxErGavWVPKuyMBZ9kfkZY/VZysKxl6YEl50GHo+NAwr+2WGS2RwlYVQ2
      wl8Tgj51Ew+7A6iKIKRVrjKQhREriLPzK+SP/B176lMcG5HYbTtRrhUYU3VOZLew071QWQGk
      cl0rKF90SaRdzg86nHLuoi+8Dxm8fvhYOjae86+yLzaDlXydy7NdHOYUwrbY3izxhwXR6dP8
      JN5Fua7ruu3dDGS5SHW6h8/vF1w4rbDVv9JlrZTvfN8JkAg3MT7j8kRwYiH6LoQg7y76ADU+
      l+fSL/H/hf4Do+2PMeI8jHa84fNYZiWzUlY1crnPQ43IYopK3X9zjTSCeWxk1t8oxNKAGbAy
      p39+ksk7KggIKDYOYkEplmMtR3ujfZhvQS75TbC9FrIZh1cnImR9DTR78jQFUpytf5zCyvwk
      6dJ84ed4vAaubbHbuow0lUqUei4O0BKR3D87zBHHZmbb4xwd/Ak9zZ9FdB7iWhBCMNz4WU6N
      XWVXfRZT01jPCXZcyYlBk9djX4c9euWtlxvl9m2LUuNO3nK6OJh6lSfrP6Czbn6FrLSxpcbh
      sdGf82LN/3Xry8EAOA7+YhxTB9VaLWcSSb9jcGzvF3C33oW0SjRP/A17azOVv0uJtuK1Wwnb
      B4YXmc+AbqDIUHVlY4gQ5Bu7GOz8zMJsD5BzBR9odZXS4Ws4vBvBQl7+ik8Xv+cHdd7VVFFQ
      EaiIJXn9AIbiElLLqMLFr6xkqFYq0fUgWeq0S9y573mfw0XiUFFGl0PBCb7UNoPjj+KXeT7X
      nODbzk9oGHwLuWTfbGj0NN8InuYPvUd5VB6nw5dDUwUlVyXjzlFwiuCexjLRYz/C8oQ5uvVP
      cBq3XT8eoJucd3Zw6orFyNT6e3UvD9m8Ke9HhObo2RsIbAnTiyodqpMXOdTuLBP+eWrYdWEw
      67+20/4RIAtZ1Hd/yHPbsownJbHs2vc6Gm7B6TwAgG/wQzQrt+zv9or5u9WbhakhYoPv8FTv
      f1lOgwohSG45zD+rKqZVYBYD3evFnBnj0MTkzd/MqkCWWPH/4oxdOdKZE/55nmnRxFGFy9oJ
      kCvprvViFMt7t1YfJctTqOfZmysZL32tD7C//zQgCRgOfyZf4R+v5hjd+jkALG+E3kk/gxmN
      cU8rMwNT/F7jGFurbeZ3CwgUgqbg/+wa4j8e/wnZx/4CsYGUCIBsQXJxUGNr63z/Vw+IlJJi
      ycVWjJskSsHuvIep5h2c7/2vPBIqzwWXKteybMHJeIjzm7++6oWAHxlS4kkOcU9kkNoQDMXn
      1+PVz8pw5+jqUo4n/CfYGVuUeCEEgaBKybYXihcEDYf2bDeDtYeYGhtEk9JFOizchDA9pLZ9
      ZqGRgpSYvl5K40fY+LsaBGJ+xVj3HLkw28o5U0usOYMLFoWSJcfdLNaLK6zsH+TLgsGMyZva
      IWZrdxDKjFRWHyl4b7aWoVKQ3c4xyhccpnY8Sz7YyE/kHyG2VFX2MnTlefnCb/DNnqIlIkDC
      TFESNEBXBffXZPhN/zm07fdsqPeJurv4RuQUsdD699BYraKXgusYsetDCIE72kNWjZIsTBP1
      urjSYSyt8ppzD31tD97ywJm0SsjcLA8kf4HHlFwdtJnottmyqh4UJF2V81sfRs/OsG3i1+xq
      mVkVCwj6BdmCwJyLAekqfCt0lFemp+nzdqCFz75OZ2KK3q0PQe1izrQsF0EoVB37JR2FyQ0I
      //xsudZ2oPUf1FLBXtR1m6Uz8PWxPgu0ul+iMku6Kh7FWSfjVXIxrvCm/z4yXY9VqiVP9fIz
      /QmeS73K6zVfwArVMT11jqInhgQCo2co5wtYHh8YHvD4md76GD/8cIa/9A/h0QS/HYtil8p8
      qSOHKh2ckV60bYdZpyOL8AUZyNTT4U4i1qgXKqUkW3B4fzCIs/kGco3WgOjYz0lxkEvxy3Sk
      z6MKOBv7LDIQuz3sT99pmvtfYVAt89ntMHnCYhfuAh8xz8hdVoIcueuraJNXaRl+g0d3TlPI
      z8UEDA3pSmzHRkFlIlWmKrDIgggBT4Z7cGUPWnrPY0xfPImiiIWZQkqXjre+Q31higNuAnMu
      5jJvFKy2/QVCakjpLMaCVtGSaynG2ljpgG4sEryybYktlTl6dN5MEEv6L3GkoChVvKtYpEUk
      cgLDayyj+0o1WyiFGvnX4hZQVJrGjjIe3o6MNSKAfN02pKqD6avw766DEoxSPPAsvzv7P7ir
      weHZ5iQ/iG/hb+N+GrLdGHc/tTHhp0J/vqc9zI7U8zStEciVUpLMuPRG7/vIlZznYwDFuu1c
      YHFfwK0WfSkljFzBc+UI37yvhNeo2O8TK5YvgeBEWeetB/8Y0bSF5tQVPtc+i22VUQ0dx3Eo
      lSTlUhnTY+JRSoiQwWxBLibGzbWjCImGgPwK5sGcHqErPcAOvbgsLrWW8AsESFGZscWioMkl
      C69YEL7VWMm8LP1ZLPwvltmAK4Zu4SdbClwpMBQHyxXMOgZhtYy+JHS+tAVNkURXOdKLcFx4
      sT/A1cP/FlZmbZo+pOmj/crP2SGGGPffA1YJIzWKI1QOTr5Mb2gfM94mQmOnyXQ+iBNt4ljH
      1zkjLb5W/BVfr+nlh9Z99NR+AZlNIcIb390iqps5M9ZIY3R8zZn4lfHNFLbv2XB7txpudhaZ
      SaA2rL/t0y8c1OQkzvQwnH6RJ3dIvIaKEHOv0hVi2UPLu3Bm6yOIpso7HsJRhVhY4Dr+Ba2U
      rsTvMyu/+wyGpsuEV5iL87K2Oh1aunSd+gU79NWJcGvN/KCAmJ+xxSIhIOYEVs5HKwUCZ8W5
      y52a5Qq2OPPLDVqxAsmsY2C4KoZwiWkllGUr0UrlnU/ZXnt1OTmu0bvja4hg1TWX+/6WR+nX
      NDB8GOOX2Zo+zZCvkycjAzwuB0mmBNGY5Gz/RV6o+wayeRtl4HulDnyJPqrj7+M2bUFpaN/Q
      PS7FCc8DNPR+j/2dBkvnZCEEzaESY7epZPtGIKeGkO61Vu1FeJ0SIy9/nzp1hoMtFpvCCvlc
      xTxVFIVsvkTeqfzs8ao4QiHdtLgSTSq1SOmiLGVGlpiF4wmHZt+i/JRclYxjUKUVEGKtvAPL
      ImAX1nzZ3TXtcSmwJVyxDK6UNUpSxXE1pKzsanFxcHEAFaRY/F4X8wzQIlF5rdUCKrlBKdtA
      UjHlPIq7QviXt7vYxtosiuPCqdhDiMYt69u6vhAYlbSFcs1mLjQ/yWxkM4NpDV2V1PodDBUO
      RlLsHP4N0pmr6WP6yDfuYvDQn+LPjEE+fZ3xWA032sR5u5OyVdmk785VcJNSMiza7pjwAyiN
      HSixtaPjSyEUhebOLvY2OTSGIV1SUVWB4zpIJFqtwHLlgkkdx4O7pFBXWoksFPNaiWzBJZ9y
      UA0PZbci6rpw0IVLwa3M/asUQBgm7+77Cq9ldcYcDUeKNWneJQQhjoRX9Fb6fQ1ICd/PePhH
      rZ0LxTkeXygLDH+F3tRYk7pbIdTLZ+fVSXZL1aMsVVQh8SsWYdVCiOutGsvbXtmfeFFnvGrv
      jTl6moH0R2GyD4/qsHRlEQKejQ7z+cv/meDpXy3m5igKhW0PXfPF2utBCEFfy7P88EwVP+5p
      5eSIZ2Gjy5TRdMPt3UoI04eyRnqIm1xOp88IDzOxNjKWQdrx4PfpeLwa4bAPv1/HkV68poZn
      PpQvWFZcwVuIo2urn1GhJBkZtmmLCBwUZh0TRwoUAQG1jDG332WZAshykUj3Ucz0FL5QhLBw
      OFVYzvGurLkjpeCI0UjeX8VT5UG2GC6OZpKs6+TVukP8igYKrqDoqpSkYHja4fSgg+suzWb8
      6DOVKRxMK4dPcdaY+QWWtTJpbiWWn3Pc3YoM195cZzbtJi3nk9kWzTqvITkUTVIbUlFHL0Gm
      st1Uifcjhy/d1KWEbjKw44+43PYVXknupn+8zIk+BSt8ZxVgLTiTQ9gX31/+mYSy7qN/WpIt
      QmQhB7AyZgEfGMZicmO7zHPPS/8Jd6If+9zbTE2X+M4RwUxGkivBB8MB/mlwP3+XeIrTuUby
      JRcNd9mTV5fkji0PhCkqnvQU5VgLJ+79FukrbzBmxtgz+iprsb1SwoCrc2n743Re+h2XygZv
      NR4mrXlRWrbi1rbSXcxxNT5YKTA7PczekZOci+cIegpsrhOMpSrJYfWRj5ZWUSpZqKpCqeRQ
      Lpfnij7plMsWqqYiXZdc1iUU9rEYtb82dZoWN171zp2drrAuqsZYyc82sgvXqdybS8kBu1jE
      ad82R1hLtqdPkpnNMtyy7aa2Ic7vQbA67+V7vUaFwv6EbWwBUMJViLmo7VKoNc2ki4J9rcqC
      qXM1DmGvRE8sjwArAg470/T2nyLefgCtNcBAfht/P3gB2bgVqzpWGQ/Xor40yuWZae5qLKPi
      rmkRLneCNZ2Ju55b+PXSfX+InBohM/waIcVFZfEdwR4FClLhhbZHKdVvYaTnQy7ufwRn877l
      lQq8Ady2nQA4DR18uOshIhffZvLqq5Rci8SAzaCr8pXDAnNJwtryoJdyXUdY0zSKhXIlT9yV
      GKZBuVSee/t7Rbxd6SJdOZdDttSfqMzTS6Fz4yXBRTBaKaA1cYX9gfiS1hfvxFQhmhtm0C4h
      DC/SsamZ7WaXUWR4vA8at6zV9Maur+rQdc8tpyhvFvOvWhJCwbpwFLVtO6KmefWBuklJmBSs
      EkEvFMpwIW4SFEU6yy45qeFX7bk24UJZY7JmM1r9pspnXj/YJQ6f+hltdoqyZnLBNfi9/Wn0
      61iW160MJ3OzTE+M8V7rZ4jnipz3NyOLOeoVCxUYVYMkAzUUdz+CjDVc1/ESQlCqbWOgaiv2
      iVNMWwpeV+KUJHVVYuH05SUOVwbZVkNRwDA1DFPD4zHQdYFmmng8Bj6PgunR8HqNhTjFcode
      stLBF+UCxUScGX/bhgt6CaEggR09P+ZANDX/6cqj6BvLU10YZSK8jboLv+TpqkFqfZLR4QSp
      pv3wCdmM/pFhlaCQxYj3w9Bl6Dy4ZtKcEIImJjkcm0RV4LfxNk50/inmhUu02zksWQlW2hKO
      iijv7nkO0bEfoShI6eI58VsCl97h8+okYcXBchzUrkZaPal1xVFKcX0FEL4Qmc7DWPWbSbTu
      Ix1u4LHRd1GRvKY0crHlENqJl3Fbd6yu2rYOpC/EVPNuCldOkkAjnnQI+qHmmjsClesqwZLW
      K2eI+XIkK+5pTijnWbq1HN0ao8AObYwT+UasUP0GrrnYVjy4BT0xQKuZZpUCCNha47LFTKBc
      OcqXGkbw6pWZbXg8w6jejHID8YBPIqTrIpMTKMdeomXmMs8lXqNn+zPY66RhZ4ItxMeSTFpB
      Pmj5JsIbIJWc4a5MH0F1zmEV8E79AbL7HkdOjYA/BFISGDzD7L4nmBgbwVPK0qi7dCfzdNTL
      9RUApeIES3edChBzlY8BMDxUTXajAb+MHaR/x6NsOf0rgl4Pwn8TlaLD1didBzGkQ9Yb4myf
      wHKulcR2a17SsHSmTzvGuuqkKZLNxStIq4x0rl8iXLoObnoG6QnwZvhpMqWV97LIPOkqPNxW
      Xshd11R4qsul6cJPP5Z3gd1WOBbOcA+WZbFt9iJ9WcHBgVdoPvPLa96b8IXo7vo677b+MQCx
      M7/Gad9NZkkqn5RQNv14hy4QHa2QBmouxSaRBK+fUF0VzTXQbQtCHvu6RcNUMbc7W+Yz1x10
      KSXa0EWe7nuVd0Od9B/+KgXbYSzQQOq+r9yc8yYE1ta7CQTClHUfVhnOj7pztOta2Zu3VjAM
      4bLeq3eFgPbCFb7c+x95uvdvqRt4E8qFa58gJbJUgHKRUqCWkexS02mNlUgs/ZvEVGFPNIec
      Gr7xm/kEQegmIlSF9EcpWi6P1pR5RAzgmP51aWUhBCIxSvS3f0MoNwGhKq7EOhZoeBfIp2Yo
      6V7S2+5DCEHL8Ic8p3Tz6MUfcJfVR8SAA/VgOO41SZWlTKYCcyzCeqsA0Hz+Vb528p/5WWgP
      p/d/GaGbWLWbKD78dZTITdKFgBKtY2rLvdilIkOuRnef5Fx/pcjRUqwdhV76fW1cK4DmU6/v
      6B6szrInkuae0Dj/zniJR/v+X+S1Xhjhutjv/BQ3FQd7vnT6DSitkAzMSNzZm63G98mB2rQF
      iWSkpJG34Y2kj/G2w9c9r9pJ8YWGFE3WOFhFztXuwAFmXcEl6aXYtgvZ2IGcq55hTA9xfgrC
      iWEmE3nG5gofhCTMrjNXzaPyGod1EqZCw+eJnnoJKRR+Xn8/+QNPVjZ6Z1MokZrrX2EDsHfe
      j1PME+k+wrCl4x+yiEVcmmPLqdHVeUjz/65PoN6KXWvzqd0PhEfRev6GY8EHSDTdtXzlEyAa
      OlBqW4gNvc/m0PXqKi2/Agi+tlfyfPdLdDduRvjDH7nfdwpCN1A8fnqLXmbKFg16mV3dL3Ju
      99fW3T2mKVDng+eT9dSc+gViaoQCCj/c9VUK7XtRVtROErZgs4D5ZWJ6VnCyJAjEBBMJycAU
      1IUFDXNs0Eqy45pOsDI7jeg5jvfC24xvuospS8HZeT9KMFp5G/sNOLzXgxAC4Q1i9Z4lp3rA
      sWmrlcQ2tj/k5q+7AcJwLeVp8eTZJy+jT3TTNHUCLTlCMtyB0AxEqJrm+HF+n1cIGjfqt1Qi
      lRG1RN/FfsqKifSFN15W/hMCY+wK4WM/plUrka7bykF7AK8q6bDGOR7eu241ivRMEnPoLNl8
      CUMVZGq3cnzr45QNL0RqKnZjuQCqhpIYRh/4EJ+TJ4xEEZUnmgko7GkRVPsEDQFBfxLqwms/
      7zWL48p8mtozryL9YVK7HkHZtBO1YRPC9N22hyE8PuzaNpQt+ykUMzzRMI2hrqRDN9TSMvp0
      PfNoI22udW2BQFNgkzlLhydFqDjJmfBnEJrOlss/4o8D7xPQNy78UoItFdQ5xirkgUPVaToK
      l+jtmaDctm/Dbd1JSOmiTA/j73mX/dnL3K1Ncszo4GTkAO3pHlo8NulUhonqbaCuXdZROjat
      kx8y7O9gWo1gmcGKX7X1LkQxx95zP+GRq7+gb6ZI9eXfcn99mqyhkJ0sEVIFl1WN/Zskqjr/
      3BTGs1AbquxlW+mCaMsv7iDf+yVuTTOTd38BYXgWi4Z8xLzy60IIGgffYJIYpVAD3VMXCZqC
      LdWr06+vbdIsFfz54NZiYvVi9tLq88tuhcOv1Blap5trKI2pSoRdAtNLX+wQiri4xpnXxnxi
      lj6/K05UWKJan8P9wWFeGryAaN3+iSlWey3IQo7dx/+BJxqL5DyCo7kaZNdhpGvzVu4utjvv
      8XDxAhcGzlDeutofkKUCIptEMzS+XXeRo8koBwJJLszoHH+9l2fVAVr0EsKA/6PwGmoU7KIE
      F95SXTKKpKHKwXF0kjP5SnlETaXNo/DGRcG97QK/f34Cr8iJBiCLeZgcQMaHYMt+tJtIzb0V
      mKneSSg1SHLL/fz4lbPs9CfoqKpsSJ+Xu7W2RS6vQr10xl5JoYqF85bmmGZtHQmUpEqNsljP
      fynWWy00HIIDH5Br2Y8tBcmiIObduN+x0hmfvx+PDrsjWbaUv8PfDv8xtO7ccJt3AkI3mPA0
      ooo+GoOCZkVyyuOj7sMfs6vUD34IGZJts5c4U9i5MKm6U6M0nn+VpmQ/hzqL1DZUcoQeqZkB
      4N76Ep7ubloXxlQs1HfSRSX7t8mvUNuqEfQIVFXFcHUUVcEwdIanC3g1k4Ij8M+dPy8nipua
      ws3MQE0LyqGnbiov/Vah1H6QTFEiPH60x77JpYTOL85D3to4y7MUS4V85fdSXkgXLh7FQQKW
      q1yjDZb9v/Qr5nWps8Zxy2VEYwcjOZPrYaOOud+UWK7AsT4Fb2tXVHRTJ1WqCHASPyAIai6f
      8afmbHTBQ+XLfPH4f0aWi0TtLDUf/IxIvI+wmyVqAhJU6eK64DgS26lU0ZCy8r0SQoDrMwn4
      dbxeDcMQBIImPp+OpkEk5KEqqlKWCkULlk6SmhKuQfXd4l39NwmhqDh3PYvMp1Gi9Th7H6M8
      +iJSzseAV6dDL5/t187tF3PG0HKxVxZMJM9cpDFMGVsK9IVjrs1ALYWmwmPhPsZknuxoz1zq
      7vKVZK3z19pdt/Izx4U8HrRg+BZHQW49ZHyIlkwv+Wovf6/cz1jHPszBM+zO91AwK3WmVEUS
      1V1ekS2gGZT7z7M/M0KwMItVa1LKlykrCrZloWkatm2jGzpZS5JKlghHAmtGd12gf6by9IsO
      NIUlPh10Ba5OC0wFPBIuzcD+JXO8tmHf8mOCMP9/9t7zSbLsPO/8nXNNusrKzMrK8qa7utq7
      sZjBYDAYzoAABLM0oKiAQFLU7oriSrERG7ERuxH7X6y0khZLSiRFiQJI0QIEQQyAGQDjbU93
      T7U35X1lVvrrztkPN7Mqy7WtmeluztNRXVl5b9685rznvPZ542u8mOaBR5m59hKOX0EIScLe
      Wh3WFIJWl2io/W9Ve7b5trWjgNhR/28dmDsJQne0zlcK/52luk13W+kWr3YjNqt3ry1nebvt
      KbpX3gT3GnTtuaPjflQQ3cO8euSf8VqmB9GWRgBOLMkP8nMsL73Bsx11tNaUfJgxkhiT5+kf
      +wmmDFiwY3xmyCAWBSkkKmKhlMKyTCzLpCIDAny286AKAVag6YuEqqfSMFsRzBSh6mn6E4K+
      tvBZL9Th+hLsbWRl3F2HhQ8ZojBPNhrwx+8K4pbml48KupI3S5te1xNbK7+28+RsH1xbP0br
      ZzZ/frtzONJWgLb1I9yKl6lYFxSd8FwNKYmYGqXgatDDD4e+SaQ0x0hblbODx26RBfTjg5AG
      YvDQhvei85d5rvA653LH+ZaVJG+lkYl2At/nNz/4A2YcxaE2mHcFNSXJ2hA+h7Bxx5V5zfQ5
      j9iSz+m4TfsgHGiH9k3Z3hkLio6gIybwHJeeqEW7qhNPRVFK4XthYdeBNnh/RSGE1SiKv4eh
      u4aZH3mOL5b/jrmKxX89Db/5kEv2JvGB7Yi4thOCEE27QLNBaPRWl5mnQjLepHnzvKDmedzI
      azVeifMnqd/C7e/FGPs5iZhBObkv7EEWT4M0eHT6z7m6qCAyTlAtIntH7pm+XTeDrlVwpc33
      n/6/wLJgYRKZ6sRaneO5y39Lr63ptASvrGgsDXZDP29CAFNXfXoWw8aGuhqwelHxvi3o2Gdy
      IBXSoAQairbJoVT4DINAIYTC83wq5VqD+VDiOA6maTAak5TzDq4wEf/2g2U94d4bNsBOMK+8
      zXOrf8uCE2U6r3kmt8Lm/P11rFv429X8bicEobq0/hkvUFRcwVOjjaOtNZCDiVVJNq6IWzfO
      NGz9vi0CoAVvFXP8XJ8kZ9dJqDLnU4+TLV2n7vgUjnwJADl3mX9W+E9kowGn5yRKmrw4/NsE
      3bfRtf0egA58qJWIXHidZ5ffIY3LiLGRwnDZhUUEyYxgtGd9rVtY1Vz6WZ2IC66ASKDJtxmM
      HDBYdTS2KZiqwGN7DTpjIeOeUppazSESsVFKI6XA9/2wNFeIkAJIKYQQ9/YK0IS/7zF+tJTj
      0Lv/kblqCnsqoNcMbjC7tsYDbiQoW4WjWbm1FMB770rqEcFQvyRmwYV8hB+qJ9CZo3y18Oc8
      nlrY4dg3xlghzkXdxzejL2HhIwy4VtnD3L7Pr+2jg4De6z9haCgk7XpqWHFuwSW4/B7cRwKg
      3RpHX/wPHDIqlIhwTBSw5dZnkrUhi+JqrVn+GD6XthgYB2wSvmKoTXBuVfBkVuArRdkTeK4m
      HjFIWA2fnIb3FgQWFj1C0BUPhcncUiHXeP9DvPZdRZDuo9+zafdmySvobZz59sGt7b1BG7Gu
      57eqR00Ook5Dk9UB1GHhgsFfdD3BUs9BRDyFjLXzvfo/YnrpFX658/KGo24+n80CWnYEE3n4
      lf5TRG24lpf8PN9H8dgokkZZZXsWUSvSk9D8MD+EGTj4hWWKrqS9coHVch7Rdn90d8GMMDH8
      KVITr3KoNI6O2lQCD0OG3X38IMCyTLSCUqAZlxHyVyCT0ERNzcyK5lBU0REJI80qkFzMg41m
      NC6QEcnZmma6IKj54eTVHxdUajC15GN1mWR2oDVU+h63AVohTIuzqREer73DgLWxzDDE5llF
      t7y3szA0vUU7Ga2eFvwstpd87yGGStPoiz9n+tl/jmlFuVxO46RZI14Nj3NjZ+V4QZIpFbn4
      rqZjv8m+TkXeL3A1P49uz4JhYs+cw+3cw9vHfif8kApInPou5f69HJx+gdXtuse0wBShXmwI
      8G/Bd2re4n53AiEl5UNP8+rww5R+9G/4glhAIHAcF8/ziMaiOHUPpGSyLvhct2LRhfMzkI1C
      xgBbauoBjJcFXTaMJtZjOzN1wUg3dMag+Zy11pyrC/a2C8YLGisrWKnDYJtGCEGgYbIe5TW9
      9/6wAZqw3nuBb17/Ph3mVi+Nbvl/87atqtDm2EHzE62zdygYSms8DVUMUg0KxTHRjgoU857A
      7tA8vU+TsBSGUNtWoLWez1xRUxtzSUhYHrA41CdwffiD8znyRoZq/wn2jf+QmdEv4o5s6hWg
      Ndqtbd8+qQV9EYO60lgC5l1FXAp8rXE1JAyB0iHxe8qULLiK4ajBnBvg7E7N0fbQmlR+kmdf
      /z0O2bU1HbyZMb7sat4uhoN2ztH0J+BQSlML4KeT0OtrVpC0J2BPAgourLiC9rTkRM9Wz9+V
      gmC2BHbU5Md7/jHG9AU+rS9heDXe63iC2f3PIyv5e96ztgGRZIrspjVLb/Nqw/ZGU7jtP3Wj
      wRrStkghsKUg3SDQ1cDr9gA/eOQ3cGIp5u1D/Dvna7xW7KEU2FuO0wi4A4Kqq7l8TdFhgCVg
      ZQWmSxY/Wuonowr8YmacL1d/wLi1B6dnm64rQtx08AMEWhOTTRYmaDMFgy7K5QAAIABJREFU
      6UbuQLshcZUmIgSVQGMANaXpMD/kSVAICpkBzok0QmgMA6QMS1aF1HRGYSgGw+2KZ3slR9Jh
      POCn9lGudh5hXBlk2iBlwYWSYKIk2KvBbXSHDJ+zavyGuClY9QXvdjxBdfhhio/+ErOkOJTR
      iFqJ+KVXeXTphftHBQJIltcLRdZneN1Cx7hVjRFCrN2U5t/Nz908UzQMqImWfacDi8LeRxm9
      8BLPBdMsL87znWNf5J2SwXH9N6hGVqfWmsWyZvpSQFANS+9MqTlhh+vLdddgMjrED/STfCH2
      Gj3dJlPxUcbaHkE9dOSuXJ2+hrpan84tISgFIatHVak1gspAQ0QKSr4m+lFMhUrTZ7ph8+tm
      bpcGCFUTISFuQkVB2gjv/0Ksh8K+Ryg6HlnvCke6ocvXvDUniKKxVjVvaMETA40VXACEga8Z
      u4u3Bj8FgIjEuLDnF+le+CHF/hNU412sFpz7SwDS1aXt0xNEqzC0qDTbjqGdPEM7CcRGNSmK
      Rqc6ebJyjbgBp0Q7nZffZDCxQCbjMV2N8lZ1kLKKYE7M8GU9Ay2lE64W/Di+nw+OPY3Yc4zE
      5HvESmX+bvhf4qV7w4FwqzdkByx7G3WZaWe92m+1oewXN3Ff1m6Bx/OW4dawV6ZxI0m0FQl7
      JEgD3Bp9qogwmx46hQI8LYmgyVrwLf9h8kee4/MXv82TcoaTq6eZ6ztJ7YlfYund/8b11VmO
      ZAU9SXCKmiFLc74keXVGkosJlNa4gcJXgh/1P06Q7l07LafvIC/07EcYYQLEpcxX7x8B0Cog
      V5xd/3vbwNZ6dGB9hmnYCxtmfvBchZQSIUO/sOuG/YINI+zh5boBpimRsslMHR6/gI3I9rFq
      xOjD5QnymNOvM3g4QsWV/Oh6nK7KLPFInIN6aYtMvRzfx9jzv4tspDbXBh/mu84BRCx51wP/
      nkBxmWfe/BYPmyu4CmqY1ISFKyxWfUmh5pKMhM8gacGfZz/LbPdRBmffZyXZx9Lop9GFRV5v
      O85jlVkesZbwxv4Lf/eZ/5P3n/znnP7xH/NrYpKrlwOWYpBpl8SVZiCtSFoh04dtwLtOjvLg
      yQ2nJoQM20Wuv7EuAD22QSkIDaZFT22a99Z/J03Bqq/JWZJF78O0mjZDELR0T9xpntw86zdV
      oM1wHBfLsqnXHQzDWCOXDQK11oM3lQqzGVtXgTg++C6WDkCE2r0bCXjdO8j0IpyoXuHTLGO4
      y2vLMTRWKy1YausGzw0bZxB6SYjdoDv8fQYdb2fF0bgCcB36E4DwgSq+Vui0ZNEVrLqaSQdm
      R4ap9x3gUt+B8AD1Ckd//nuMPfev+MvLy/yq8w4PGUu8f/lnTPc/DF/9X/jvS1MMzH6Hjq5l
      qlowUdQcskKvlylhpS44Szd606SiV5fQgY+IxNbKTdcqwtoMQVSGs18t0HTbBnEjNJSGogau
      Cj0IgtCjkDElscb2jwJCCMyVWQ6XJ9bf23HObA7a9c9ut4/rekQiEQzTQBoh75BpGphmOC/Y
      ttVymPDa24UmdeVtDlJBCEFFG7xp7CGhBF9deZcDoriB3AugpmBWRTil25kw2nGTnYi23a33
      NYC9MZO8r0gYIsyT15CxJDWlsQVrur8t1p3EnZakqjRthsDV4XE2thm/fYxOvkm8WuRqRZOV
      Pp4bUK3UCAJN4AdEVEAiZjGR3sf4vmfQreW1GmrL83ijj7HUc5SpiqanNMFn3fNkxt/jUscR
      yA2y2jPMo5W3GBEBuSicKkpKgWCuDBcKkiPWKteDdhxfI+olPnXhz/j6/N/wdP4V+uZPk6+4
      lKId6yuAAmi4/JpU654KX1cCTU1p4oak6CuiUlDwFdZHmJOitaajsnArrn2aM3brzL+ezhDq
      +nbExLKsBglbMwqwXu65Xd8A3TjOUUqNbxEkpeafepegoJscG+gWe0Jr+Fsvy7Xhx9H7HkJm
      uhAfAu9P1pI4DT0+YQhWPUXUELhKYwrotg2KgaLsa3K2QaBhwQ2INFa7uAwns5xtUPIVlTu1
      CYTEiERJ+YJ6oAmCoDGhhAaqYUjyRPnPR34Xv2t4Sxf6+NI1vuyf4U+rX0Yk2rl28Iv8fu44
      T439Kc/HprFO/7+8kv00Cx172ZMWvDFpMNJtkPEMXjZOUiPCfudt/j4YwZ45z9fLf0JPm0FX
      QoAFjhNwPFrkcOnvWTz74roALLlqg3NwyQtotmZdaag6zd9+0LrnRwMhBFe7j/G54gVAoLW6
      gadko2rWul8zya1Wcwl8hVKaSDTMGXHqDtFoJGwOpxWx2Mb65835RetG+NZUZq1hxpehHnzw
      SeTxz7ccaHcnDlOA1RjIZsMR4muIC0FNadKmRApwFMQMQcFTxIywAN9x6kBYESdpBM/u4rkK
      r86As8CcK+hJRUgIhWFKEokIGkWg4e+7vkTQvRdrcQJjdYFa1941Njw/UCSFh246A4SAbD+v
      PvY/4535b8x19FKKZ1Gpbr4/luSr+0qsegZ/qD+P6B1BLU2TMQOejY81nM8BQipq1TAfSKkw
      Sa5ed0jY1nocoNmWunnprX2JW4f75p+PEoXcXipKNjwl2+v222HjShD+Nk0Tx3GR0sD3Apy6
      gzQk1WqNet2hXndb+iI0w2ytd0m1/Gw9Dx/Be47Nm/Fh5vc/dWcXfIvwdejpmXFC/sx5N3R1
      5n2FozRLnmKyHlBXmnKgqTTe8zUsuaFitOj6eMVlZpaX7iogZo+fJaerWBJiEgyzsRq3hCrL
      VhvB8gxeeye13v0bqCADO84Pt+ltpqMJzvY8SXZ1gsreRxCJFJcO/xrXVyVR6WPPX4TAwxg6
      xCm/i6QJbZbGtk1sy0JrRSwWJZGIYdsWiUSMSMS+f7xAADrbz18OPc/Jyy9xNKqRtyCCQqzX
      /7baDKYpSWeSSCHRGmKxRhljI5Ib+qo35vNsn0m6/n8rxuqScdFGe+9+RPTmwavdwE7OXbgB
      sWRD/9ZBAPUqqrMPKkUwzVsKum2GM3CYi9dSJPTqtu2pruoUxe4DyERqW5ev6hpmqmt47f3Y
      zDmypWlUpYhfKvDB0a+tkQN4kSSvFro5WFvggJjm7PgY7HuIIlHqjdXOssP2XKYV3RTpN9Fa
      IBOGoMuWdFg3joTEGktsly03/P2RQgjmjz5H1W5ba9islNqyEmy7MujNK0GDOkOGLmpp6PC3
      DH+MLd24d1r3thfCfktRjaWYO/zM7V3jxwRhWsiuwVAnt+x15uDbhR1l1sxwyexilQgQGuOB
      hnMqw1+O/hNoSze8cwpdK6NKK2inirUyjijMk5l8A2vyNFSLOPEMvaUJniu+zcKJr+B1Dq2f
      c7aX5dFnGUgqzrc/gsr0EKzMUdvzMK8uRagH4TMve+v2YKDCdPeqr/GURvzppYK+4oQsucue
      osc2qCpFydd02QZFX+FqTcIQOAoypmTODeiwJAVP0WUbFHy1u4GUm6D79A/55vUfIBAo7W/Q
      8W8WQd0YF9gaR9hukDdN5PW/Wrdt1P2bcBT8VT3F5C//H3c0k94Num2JRDDbUG9ulBTexOZ9
      dOCvNd64HWitIfBASLovv8Kx+bd4r/9pPGFS7RwmSHZileY4XHmFTllgMJYnZngU3Ah9SZcr
      kx5How7nC3H+qu9foNo6wmL76Qv4PSNbGn9o38Mafx9X2JDuRpfzEE0QvP8SvQO9PL7yBj8e
      +BrHCqd4uPIBryQfY87oYM/czzi0X2IKYNULdcaMKTFEaChGZehBcJQmZgg8Fc76y16ALcBv
      CEUlUNQ/wsEPMHf4Wd5cvsgT5auNPBu9xd+/ndrSGiXeHttbNmLt/xspxxuPWVSCPBFUMY+R
      ++gEICLBVWA2Onfm7NAQL/iKXttAoZl3Fe2GIGlKpp2AXtvAEDDjBOuV1Hcw+KExsTQGaTHT
      w5LIsJLsRXkeQpicnP0LnkxfoXuoyXIRTkQ5wna1mTawtGawrY7llnCNLrTWYZR8m643wrTw
      Rx5Fzl7CXryMH0/jCYH5yPMsd/Tyd/o5hBC80zXC6tszVKuLFEY/zaN9b9DXJTGXPUXQsIWL
      vkIhKAUNLUmEj7yuwkZ4zYxCAyj5oUnYbu5cm/VhQVg2b+57jsz7C4xSWqPB3m7235Drv7Z9
      czbo1jSI9Zl9XXPc7tjNTa1fHWh4MzpI8bGvIDv7bv8C7wKWCL07pgifi4GgrsInbEsoNlIh
      spaB31QL0Phq950aJ2qv88U90/wj/w9QGt4fVzx+IrqNE0wgdNiy1lACIQQzXjtuI89cCAE3
      ipsIge4ZxTEjyHoZI50L0y9Yf+aynMfyLERnFmFGWJhx6c8lML2WWTNgPVcE1vNFmm+5en2/
      tX0+rETym8DpP8Bf8U9JrUzxpdlXGfJWNqpCLW7KravBditBUwhEy2vNughttzKsRbzWsKoN
      vtvzNHMPfQljF/lTbxXlIJysVhrJcMteQKDDiWzODfAbU/ysGxA0nn3Tvb1rT9KpsmfpFT6b
      nQShsczwXmUSAtcTROz1CaiZdCga/dKqeQ/RYTBdT0LbrZ+RkBK6hne+htwg55/93wBB7v3v
      YzXqB+4rL1ArhGEie0copnN8P9PF8+/+Z3wBWa3oMsJswxtRIdLYsknzpVXh2d6rsn1xvdYw
      p21eGP0ii0efu628Hq1C5rvdoj5stcfclotodW+2qq23O4eppemwam0bARf1El/N/xEnOleQ
      svX+CrJtkvyqojdnsT74Wz4rBNG0jdYuX+ycwbj+X8iXD+PICNfjh/E6925klvbq9M68Sioo
      cCH3DKpt54bmQMhq7rmIS6eIP2ty4Wx5XQA6GsGSpY80v+fuICwbYWWpxJN4YpDHsiu8fhFW
      qw4segwLRURCoAXntUQKwSihDRPi1p78Vn/QViGoasGfHf8G3sgdENkGXuiKMnZHAD5syOzO
      al1u+QwncsuNxiOhXeb7Bu9e88mkLdLtsmG3bY+eHpuzYy5JqTicdehPnwahqDpv8h9mf5VS
      //r9PT71Pb6eOgPAB0tXuTKb493Ek6hkFpnMhqqRUrC6AIl0yHW7MkPEXSU1pllwGitARIb8
      is2BkTZDJ2PeV2St0E++4oeGky0FS174vi3WPQ0fJ4Rp86b1GQ47f8MLuW8y4ozxjZPvcm1B
      4TYYTI51SWIRwdgHLn2zDpFbmKI3D3KlNU6Dms8SoY3UxPlIN+6eE7c18699j3VzKsV7CjeY
      ZU+oUzSrrNEaicHVOcWR/XHaE2HaQxhj2f4YtiVREZNK1eVYt9FYvSWJiOA3Sn/NmUtvcTFy
      mPm+J7BaPIDH0mVSK0WeTM8hhOT8XJqrYoQBpnikY475is3l5T70pcsk4pIOWzEXbwTCohJc
      pYk1lpeIhEU3zAhtMwTlIPQoxA2J1Thvg7Cs7l7BcvYYV2Z+wqAxwXjmcfL10+zvDYVz3QaA
      o0ct3s0HHKj7TCGJaU1uE0uB1oJ5X1ASNu0iwESx4Ate6X6Uct9BtJDE89M8NvsOOp7k0fI4
      8zUPdAD3V5HdrkJrTVkmgQVcF1xfslyC9g6bZFxSqdbWFl0hBaZhhoXujUxcQxpYloFhC/oj
      4X1snYR6kpqe5DTPqWnGrr/M6KYGJFUfsnFJxJZ8JlXkKf1eIxBqIAgYzkwyKwULRUExkCir
      sQKUfE3Gkix74YBxlMaWgrrSFH1NNQiHuqs05YbhVA52o+/K3UM7NbBshB3l+x2/xRcK32Fl
      ss7LOs0vH1hei+w2IYRg5KEIF89L9h6yqNVg+d0qWTPU/10FyyLCnx36Gu6eY+C5RPMzxJan
      KWSHEHtChuayPsGLfpjfE7z0//BIeZorUxdwh499xHfgo4X2XNAKDBNhmAQLk8hUFuwYuYV3
      eCo1zsyypOBK4jFBZ5e5NvO7rtvIxWoYvKqGaRoIITEMSd2pEwQme/qiLF7xyDQI0JQKc7aU
      1msN0I911AkTHtcLn1IRqNQ1kYa3tLk6CAS+0ly+LujrMCinLarDJid7GyuAYmMVUaHFKsr7
      6++vtLyufsS+/50gWlrmuNU6b1RG+FrmNN9J/k+k5v+Kz+ZmMI2N55pJSh59vKF2JOFUziK9
      Evqh/9IcZvzJX8fI9q7NPU6qE2ezeiMEwgrv9ES8h0/VJslOnWX2ARcAnCq6uIwoLKC7h6Gy
      ihnU6C+e4Usd59EBLNfg5MGtBnJ7Mqx70BqKpSKp9iRaawzTAA1BEGAYBlIKSs76M1NK43ke
      gVJ4rkelClJKpJSgNe3tYd6QlFCp1Ei3JdZqOppIxTW+Nvj5RYujIxn6u8LV4771Am0H0TVI
      V/0dUpbLyeKL/Lz3N5HTf8gzvXOEzvrt83kOn4hw8UWfaADXjz+Pme3dss+NsNI1Sm3pHR4u
      XGTGraOLK2jDwMh0786F3Uuwo8jeEXTvXkBgZnv5JWOStD6OxzHyGhYnX6BcrdC2iXXcaDHy
      OzJbW7g3t3u+ojURVwiB6/nYto0ywxWgXqtjSLlhoDcDnZVqk3UCVKNbpNawt7uNFxJf54qE
      4dp3SEQfMIVVSIOx4V/h9yP/gqy/QNv8B/y09ze5uhTmo2utt3WJRiyI7o+yHDHCWeU2Udr7
      MG8k9hAJHLTvoUorBNfH0Pr+8ajdKoQdDVc/ERYQfaG9zqHuFPV6mWppkVp5ke4MLBUCxufc
      O+p5PLvk05Vcfw6GIUm1txGL2rQnE9iWRXt7kkQiRiy2vtK0dgdSSqEChWmZSCGJRCJk2gSD
      /hWc7Ag/yIesGw+UAEDoS1cdA0zoPk7474EV5e/F55ldNUP6DCVQm8ZlEGhG9xgcfDKBvIOG
      38K0ePexf8KrnScR0TiGHUHmBgiufXD/N72+AdoMxUOJUHWsL7/NaPI1RpOvcWyoxp5em0pN
      8+I7Feq3mV/dn7OYWN2a5NiEbNRxb4YQEI9HiUUjJNsSJBJxYtFoKCzxKKYheaZtDFErMpZ9
      nom88eAJQBNX2h+n7kL66k9ZGniKb/tfZb5oUCnXWVkuUq141Ko+1aqH6yqqVZfxReh1Vu7s
      C9NdzD/16+HMWC1A4CNiCdTCRGioP2jQmifizlr1oBBgSIEhxZrx6XqaZx9PMrXkM7N4a4za
      EGbiZvpinFoUeLdZcqvRjbJWA8sy10gOmhjq8DmW/wk6kean3iMPlg3QCt21h3dzv0P62s/A
      96gMPsr3Chmez/8Bfe0mQRAgpYFSCtOUaAVlP4rh33pvX60VbXNniM+PkTLrGCLgkn0Cv2c/
      Zlsa7TkE05cJamWMgQP3XbvTG+FE3OOJ9lDFuXDmJwxlCmxWKAwjJBYbHYzi+5qx63W6MwbZ
      1M2HnWlKjITFlUBSz3s4ZZdoNoZ2fLqsgL7Unc3dAjgWu8656grX+n/x1gVArcyF+TCmjUh2
      7HpZ34cBIQSrI59bM3vnYz28VfoUvx57EyHMhs4Y3gKtDbKeyWzX8R2Pp906opJH23FEIoWa
      uYq1fIUFlaFUrzDarXm++mMKF/6e97u+htNzGGP4MHp1GbUyh643BEHeH1SUO0EoxWPWKrV6
      SCsvgxXaE1sHZMQU+IHGNASmKTi8N8rsks/lKZeRPmtbNcb1FJenPTpSJkdGoo0sX5uJuQiZ
      dkkyHmW5EHB6ukZvNCDXtv69Arg44TEbbwZnN+Z8NY1hKQRHJ/+I94/+61sXANnRE+pkS9P4
      l19E7juxoZTtfoAyTMYZQOs3Wzg81+t8R5JFrPwEQdeBLZ/tmn6ZZ9TL9Mar/Ox6L6cO/0uM
      vn0U+kfR5QI1O8YZy+b9hXFG6i/yNf6W+dk3eNd8gnJyCOoVjNwgPAA2QTB7lZnr38VNAgK6
      2ny2TzHXuJ7CNEKBF0LQl7OoOwZnrtY5ujeC2VJ4VHMU4/M+B4aimC1hdiEE/V0mlyYcDu2J
      kE0bZNNtzC56nJqrs6dNk46H+48O2XRlbj6sD/mKMxNXbs8GEEIgcgMYJ5+h7/zPsZanbufj
      HzuEaRPXlXDANyrEmuzQQghsU/F552/DYM8mHFZjHO6sELM0H8Q/Fa6AzVTbtnQYEwh8ZKqL
      60d/g5eqJ1kVGfb6F8CpEpv/gOTc+/RMvwqVwn1tHMv+UZaMDCO9ASM9AZ2p7bWBiC1xtlH9
      oxHJ/qEoH1xzmFoIdyiUfGZXAg4ORzYM/ibMBqlvK/q6bI4dT7ISjfLerOb0giYWubUhbZmC
      OLU7swGEYVLqGMCL3n+ETvnBz/CtKcGvxX5MLu6i1Xq9lxCSY6klrsx8jwsdzxCYEezVWdrK
      Ezyam0ZrzcVZgZvrW6tBaEI7VbAiiGgc7VRZ7H6cpVQOhMCcvYAV1Hi29gZHsz6vnfkhZ/u/
      ynL3Q+hSHpHqRNfLyPuF8x/wzdhN90nGJa63vaDHo5Lj+2OcvVzn/ESFw3uijPRvLXhphRTr
      BnYTQgiG+yKUUiaJfEAyfutz+qCYunMjuLL/8ZvvdC9CCJYHP8Pv5/cwtPQ+T9vvM9xeCUVA
      aCxT8mu5U8yWP8D3obvNZzlQnJ8MqNU155whxIGerYeNrjcus2orDM68xPXap1C9+xGBQymz
      n5+VI7zgDuMe7QenhrE8TdfkGWb2PYFIZVGFRYQdRcTvgYlluyZpLVgUXWhCkrKdCMoMCcVK
      wE7xVikER/ZGkbJOf9fNHQR19+bu1LrjIqXEtsLvdF0vJDjbBr+QPv/geoFuhiDTz7VMP+Pl
      TzG0+AYPcYb96TJRK+QE6oy5WA1bte4p+nOSlRWFkR4GQHvOjlmcfnqAa+nfAELNOBg8iQRW
      9cn1GSwZmmhzvfvW9dBYAl0pfuwCoLVGjY8hcoMI9BqNYCvswjhjQY1cxiCXstCidXCGuf62
      JXDc1ta2WwXF80O15UbMGwDVurql2d1xXEzTxHVcAqUIggDbs/AajcbbkwkMw2BhxSdfcv/h
      CkATqq2T621f4Zr/i8QXL7LfPUOVONP2CEf8M3w6Oka+qrFsgTIM/OIKR678KQnpIFCcij2J
      23PwlujMb7aPiMTBtFHVEvJjFAIhBHL4CKgASlvjItqp8UhmlkODNrNLPldmHCI2+D4Uqy2D
      XYfFNmEXgvA9oQWI0OAtV2Cx4NOXM9D4CCRhA/ON9ykINNdmXI7s3TjhtJakXp5y6c5aWJa5
      ljtkWiZCGI1GeTJsxYRCoVkuuuzrv0+6RH5c0ErRMfY9fmvgTdpiklfO+nxmJFzalYJzCzCe
      N3hz9HeRnf27851ag+9+7DUCulpCF5cQ2b4t55Idf5Hf3ff6mkAv5AOuz/oc3GORjMtt3Zue
      rxmf8ak6ioVln6HeCImYpD0hSSY21981iA4a3G7nrtY5uCeyMe9njZQMrk175DIWyXjIAbRd
      JWDr/gBvj9WJ2vdxSeRHASElK0e/yrcWD9K5coG+2BW+P7bC3rSPjtvs3R/BmzdDIzbwQRq7
      0sNXr8xBR+9atunHARFP7qiKLXec4K9/9lMilqK/y+TEqMXkPLQnmlHXjSQDs4s+UwuhgLQn
      LOY7DOqOpr9LEgSas5ddhNAkYpJETNCZNphfCajWNPGoZG7FY++A0VJLvA6toVJT7O0HTUDo
      1m4lO9gGOhSt0QHrEwG4GYSQ1LsOMtV1kMnAh9IKtZm/4usHVkDASsWEHrux786DX2uNMXcV
      le1HOVWEFUFE4uFQaVC6CCHAqUEkfk/HC5TS1D3oz0lmFn2k0JRriqkFH9/XdHUYJGLh7O35
      msVCwPFRm2jDRdmdNTl/3eWNM3WSCcmePpO2uGRlNazg++CqR2/WJJcBx9U8dNDmB69W+Noz
      W9OcldKsljfXdW+9d56vWVlVdGdNphY8chlJ1L5RceYn2AJhmIh0F+dGf4uXJnpYyiuqbaHq
      s9Pg124dOXWBwdPfo+vsD5BTZ9l77W9IFK6Ej8mpoVWAbsYGhAhrHD7G2f9mkKlOLopDTCxJ
      OtOSo6MWTx63kWjaE4JL495a66PTFx0O7bExTUGtrvA8Rb7oE7EF2bSgUApoaxi3HSmD3k6T
      4/uiZNMGyYSkMxOuqpYhqNabA1uv/RgG9OUMCqUbe4jOXva4POnheppS2WewO5z7P1kB7gDC
      jjJWO0TPmbOkDBfSVWhxgzahPZfnX/m/OckcV4XJ3EAfv5L9Pp0jgunCLG9NnUMakjF/lM65
      N8i0m5xa6SbekcY/9NmP4cpuHeKprzM2d5WHE3+J1gHlqqI7KzEMwcScz9nLDsVK2GxECM2Z
      Sy6JqMA04PpsQHfW4Og+G893G+kS4XE3p6trrZma8xgdNFnMB7TFN040CysBxUpApaaJRiyu
      TXns7beI2KGdNjnv05M1sExNX87gnXM1jo9Ya8HQtQYZn+D2UI9nuSY6OO6O4198j+X2ISKr
      8/Sc+SGR4iLVdC8dM6d5vvAGCUNz3bIoZPeRsaqkIh7tUcXh1AoH2hb5VOISjw9WOdxZ5khy
      jlm/g1J6/z2dbyWkgUhmOVcbwpw4RcSCmcWArg4Dw4BYRHBor0VHUjI+67OYVxzZa9HVYVAs
      hzQwbXFJuarIZTY6YdbKJoHFfJjXv1LU7OmzsBtF6UuFgIk5H63h4JDFYj78jgNDFhcnPGYW
      fJYKAZ0pg8V8wIEhm1SbYHrBZ2SgOe+LT7xAdwsxe4We03/H/iBPXHu8cOIbHLrwAuW6wxfi
      i+QsDxBMO5B5Kk3MVo0U3R1UJjRjUwZvrgwzc+B/QEVvvz7ho4RWisem/pAvjc7z5gcOUmhy
      GYNaXXNor7XmkZmc92mLCjLtksuTHqWaJhYR9HRapJMbJ+BmDC5QmrErLsdGTFaKilINsmmD
      xZWAal0xOmiuGcYrq4rTl1yeOBYlvkPLyzOXXdJtMNBQfwTikxXgrpHsoDz6Ka5GuqlgUtz/
      BMuJbp5ffInBiA869EkIpTm/Cit5TSptYpmthIsbsxavTTl8vmcBZ3qc6cxD93T2qBCCmVoa
      vTRFb7JOW0xy7prH40cjGC0G6+Scz1CPiRCQL2n8AKQhSLVt792UBv82AAAcI0lEQVQ5c9nF
      cTWZJCRiEqU1V6dDg7u3U9KXMzck0sWigqEegwvXfdJJY8O2NWgolBWd6TDWIMQnArBrkKlO
      6gOHSRZmMNNZIqsL7HEWwpw5KYkYgm7XJVf1uToZMDPjs1LR5HIbB7cfaPKLHoMdkhRF4osX
      WCibJEsT6FqZIJG951Qj0ZZhPPkopVLAI7k5EjFBsaxIJ9evbTEfrKk6FUfw8nQ3l42jnKsN
      MVVKMNK2HMZXNJy76nBg0MBxNT3ZsIHhpcmAkwdsMu3GtslyEApjrkNy+pJLLmNsEEAIVS7L
      lEwvBHS0h6vwLRvBWqmNtHSfYAvSQRVv9go9XTlEfoF64K3VBSutMaSB7zsMWB7aM7naFgHs
      libeYVVVpSY4Nx5waEjStjDF/5r7DrYBY7UerC54eXWAGadt+wzkjwlCSq53P8cf5bt5Wr9I
      fWWZkohzxR2kouNU8iuUzWXO68NMtT+Ceji1trLNaU1q4vd4pGuJfFkTscAyQ+8O0GhZtW4X
      aA2ziwGurxnsNtA6VLHqbmj42hacu+4y0m+FfFax9eBYEMDEnE9HuwyF6davEHS9+pF1O7kf
      4Rs2ol7Bz0PR8RGWIFAaFSgiETusV1aqUbDt4tXDyGXNVbz1Tp02G8yCzyEVcF0aeP2SmNRr
      DAmG1HRFyny6+jIvXYqwfPgXPtbr3QwhBIWOY3zXO4Dwp9Dt/etR5D74oQrWBr3Y9LnXUr/C
      K9MzKDtB38LP6e+aJtriCc62Syana2Fdt7RwPOhMKU5fcAm0ZG+fRU+HRhohVUqhpLg+WUaa
      EUASsQRVR1GvKz77cJRrMz5zy8GtC4AQEj4Z/DfEqjZpe+KrLM1f56sdLxPXNlqHt1g26Mqj
      NOkBwdI2oInZEJeag4U6UUOAIYjEJLYpiCUkK5WAQk1Qkj6dfoB6/S32iyxL+tldiTzvNoRl
      Q/fIlgXqRrZM0JaDthzUK8ykf5Wp5X/PSHeA0mHqSV/O4NT5AMfxidl14nET2xCMDpqNlHYP
      rU3cuodhGsQsxXBfBDRcmQ4Y6Y8QsSVXpwNcDw4MWWE57O1enK5Xw1yVtq28Lp8ASpUqX3v7
      W4zE6yExKyEN4BpVu4axosAJYNH3GKlEiNgCIQV1JYgaABqKPtcXJPWVgHfmAo5FAnJ6nvx/
      +jP2RwO6gwLvn3+F2uGnP76L3WVoFYSMc26V5SWH8XGf/g7J2QnF3n4T19UcH40xPhewZ2C9
      pLJZXKSUJhq10DpsjhdyQRn4KkzWE0LQ3WEwv+Iz0h9+/rYFIFSB/mGtBDrwwHM35Pxvu1+1
      yOcm/oDMgOLchCYjNd2xrXbT5RJ8qUvhKc34GxWUpzlqBlgtaev7TUX+Sp0eS7O/vcl3sx7t
      NNHI+WvoQ0/tGq36xw6nDtE4avYqQgXs65EM90hsC7Qp2DcYcgB5vhdyiZpG6A/QYXWeVBAE
      IZ2KlAaGobk47nLygBW6VbVgcs5l/2CzDvyTSPCt4b0fEbTnMAYPbWnf2YTWmu78BzzdtYAp
      JcUOm6oj+PEZn0fjAZkWfXYkEXZwsUw4jA/bZD0IAR027GTpnq8anFBnWf7p/8e1kc/iJbPo
      VO6edpneFDLkDB0xp3l4r4Hd8PYk4wK/4db0fBBaUa95lEs1DMNASIFt2/h+QNDoBRyNRglU
      gO9L/EBQcE1KjgTpYRgNkjR9ByrQP0gc+BRSmjdNUHuo9jpmImQlS8bCJq5HOjRz1bBxV8YO
      B7bdVHPuwo3zaNJHCDhfvsKXLl6kEkhelgNcPfIlvP5Dd3zcjws68MPkQK3I2pW1wV8oa7pS
      krNTit4sXJr02T8cRQiFlKFTwTRkg11agGlgSRPDlJRKikJJ8fKpOpnOKFoI4miuzXjs7bNC
      Dqd/e3ZZT3j38axxj0CrgKEP/pTPRc8ykPG5Pg+RUsDeWCg07y+Ew93xoVrTPJH5cLI9v1fu
      gM5+ptMjVOKdBKaN3zNyx03vPg7I0iK/Hfw+lVKNii/xfM1Iv4XvayxbkmlwAqkw+zkkaxBb
      7+f7F1yqNU0sJjk0GkMjiBs+1brm6pRHZ0pgah0AdyAAWqNVcF/d2A8bxZqkq0szdkVxxFRE
      WgiST3aFv1+eEcTNDy/V+XPRPO31PMHs2UZvMMGZy7387Pg3cDs2Fu3caSvUDxsqmeNPVr/J
      o6t/zCP7Ne2JsEnLpUmPoT4DpxaETNGej22H3J+6saKqIMC0TLTWtEU18ahBPAZRI1jjDo1F
      4Og+m3PXXMS/ObOoJ/07YCxr6FD3tc65i7CWxvn62L/DiUAqCBiOb+yCslCF6RVNm9QkDUjv
      MkncTrW0TUyQ5G+GvkKlvZegc2CNo/9eiyq3IrZ8mSPX/5hcSlB1NMf22WRSBuWSE8ZWoiaB
      r7BsC6fu4jgesViEIAjQwGpZs1CQPHq00TFy8z3SYN5pdFcH/gNF9Xe38BId2JEYB+1SoyvJ
      eisgrWFmRXM4vvsz/80GfhNDlPjX499mwTf4j4/979DRc08PfoBqZi+T57Ls6S3QlhAs5sMk
      uN5Ou6H2ABFNEGjiiQiJtoaXyFMoFZDrNKn5N2jhJe6CHfqTwb8JsSTf3vvbzPpxmlTsTVxb
      hdyHqPbcKoSALjOga+H8x30qtwQhDbwDT7NvwOLgsMmBYYt8SSENqNQD3j5X5/KkR6DDHoNC
      aoTU2BFBNGYSsaHmC+pbec7W8JE6kLXWDyZTcgNObg/fzX4BN9g4M9d8SH4IArDT7H+z5lWm
      8m+4/VahtUa79V051k5YyRzl0uI6CddAl8mp8y4Xrnsc32eTaZfML28/y9ccRdQIOHfV21Al
      qRs9ybTWH60ACCHQTjVkHLiHa17vFEIIZvY8zTte11rej9aagx1wpiQJtKa2qSlvoMOf24HW
      hMGfTe9pfXOVpqAs5rqP3N4X7gAhxLa9gncbrVmd6aTkoYM2jx4OI+iJqKDubn8DL1936WnX
      9KQ0py84TMz5uF7YMUaEjaR3VwD05s4T20AkM+Hgr5V386vvGQgpea3nF/CURgoDtMAQmoO9
      gjHH4K1y6DQINEw6gmsJkw+cW38MKoD8SplK2aFe86lUXJx6QKXsUCrVbhiqqAaSvx78MvoG
      fX7vORgWM+7OlJG2JfB36PQtBaTaJL1ZyYkRg/kFlzfPNchKRbiC7ooAaK1vOV1aCIlMtO8Y
      UX0QsNp/kg/cDiqVOoV8BacWkNQBx1IeIynNSwW4HDPpPmRwdFhg3eYkqgKF47hIw6BWreM4
      XmMF2Hn0ewq+3f8VZg88c5dX99FCSMmZYOcVS8qw48/piw4vvFZjfMbDcTWup7E2eXijdki5
      cu6qz/SCz7Vpb3ciwXeUkXiPeyDuBsKy+Un/V+i7+h9pj1vUaw5CCGKxCF2mQ2eXwULMJBkN
      70Fvr8HFCcigyVk7DeKQ60ZIyHQkkTLk4Emn29aWcyGaVsHGe1sL4M3oPuYOfPaezB69EbRW
      9IuZG+5zZMSm5ijipkdEaC5edUBAta754JrPkT0hs4Trg1PTHBo08b0Aq03uYirErdzYe9zv
      vJtYHTjB+/OH+UXjKpFI2KQPNNK0cZRcG6MCQU8aulIGyyXNmUlN3NWMRFTLrWrlyg+7pzRh
      WjdfdU/JHl47+Y17Muh1M+QW3uZrfR/suD1QmnfOOqQSgt6soD0h6cmG9+TCZIDTsA88D6JR
      iWkLXE+TaVSr7fod0VqHiqqQ6IaeL+LJ0ABuqElNSooHucJMCMls2178ylVMoyn3AiEMVhxF
      vC3sVtLURYWAznZB51HBdEGTH9dktyTJ3dnkUYxl0cmOu7ugjwkj6gIRayvV4Ro0tMcFB4e2
      BmQPDhooFdYD1D0o1zVxJZhxIRkLSys/lBGoVpdQhQUI/LB7MQ0DWYgw55utPO8PIq4c+AJ/
      HnmSvMOaR0gIQcE36GgJim1+sDELSmr37k/Ur34sXjfdSJe5Y9RKHEgsrp37uoK38V/rtiYE
      gkpN89NTLrG45Nh+myePR7BNTbZdsFQIHTZ3JQBaa3Tgo32PYHEqzA0SApnpQma6QCtUfgGV
      nwd3k///H4AACGkwdvTr/Pu9/4oXgv2U3TBAFjehVJeg1wWjFZk4lNKSVzx52y7SJlqFyrmF
      ZhYfDvRdUTyaq9N0xr0Nbs4tA102Co603iAUpari6qzi0yejOC6cueyxXFC0xSRXpnxyHeHQ
      vysVSAC6QQgrO3rA91BL15F9+wDQkRhGvL1B8uI3ajoa6QG+F+qkD7ggCCHwukZ4pfN3ODN5
      it+e/Q4XiorP7WmE8lu8N2GTjvAzj+6FQhXGrwhGbjOItoEVWcNSsv9jWXGFkGE94x3ClzGu
      jpVpjwWUA9lILwm3xdotLFsSjwlqHvz4zTrJqCCTMUgnJfkKHN9vIYRg30DYI/r0ZZcTozaJ
      RpH8Tyd7b4MVIggQxiY9S6zLozDMsJytd2Rts2ypoNI0iurNsGQNwwx7cRnm1uM+gBBSUhp6
      mN9zPX5p5c+YzguGsxuXb43eMMOl44LxiAypDLY/KjsxIDePsxwYjA88umvX8VFCp7sxShn2
      pZdorYYDcP06dQd+dlaxv0fQnoT2mGBiRZHOxDi4Z/OY0qEt0YgN/GRygDe6vnEbRfFShnp8
      4IWtUneaUTb3ztIqLDwwrXC9QtFcGoX98XLgf+QQglq6j94ojOf1mgBAYxUQMFvQLK2A9jWB
      BLOs4YYazFYhaBWiWZlCJ7P3EoPKLUPYUX4Y/yIH/W8TMTdOArYpsE0Y6hAc7FlfZeK2ZnzR
      J5uSGyLIDROUmgN/vfAIl3u/GGout3oyTRpvpNmoRLjlywjtBK0QhoEwrPBgvteM39/GsR4A
      JFIUA5P1JMUWIQAKK5qT7ZqHOuBwG0itb5rbsxPqSvDKyJfueoU1BcS2aXpxo/13C+XcAc6U
      OrlVD1h7TLA/4fL+2MaG5wv5kBGu6gquR4+vTeC3rqAFfvgY9O0VwQghQlrxRuG29l3QKlSB
      tEZVig90gtwWmBF8LUg6grID0wVNyYFCDS7NQWtQ2JLgaEE92G6eaM78OwvHmO5gZfiRuz7l
      btugOf4tAYlGfa4twsFuAGlTkjIlBtBrG7smBMK0eCnxPK63dczNruptnQRRS9Ab8Tl3yaFW
      13i+ZnlVkUkadCQ0mZX1uMItC4AwQ4MCY2satFZBOLBv6Th2mLuqNUJKRCLZUI3+YUAUF+mw
      FJ0mvHZRU7/oMfeey3vv+MQnPOotc4EpoDsrWLRNLteazBBwo9lw0RWcrli8V4vx4vFv7Eqs
      pRQo2hvGbIcl115nLEnSCCPSpoBKoIgZgnKgyZi790zLPUd5s9jN5srF2VXNsYHt70XM0PgF
      h/lLZV59rcLogImUAikFR2LX1/a7fVqUbXR/IQ2QIYcjgReqSewc6BJCQKOeQDTK2XQLa9iD
      jI6VcZJmWCTTUdL0WBKtXPpsEU4IFZ8zswZ9aUE2BoPJcLi/UREsOppcpHn/N8YRysrgPbp4
      4/CXcTuHEdH4rtxPg1D98VuWIFevcxwlDEHeZ81DYwqBozTO9oe7YzjC3mLt2CZY25Dgzq8q
      ao7goYFw/GUTmvmVgOHe8O+Kv2577mokOBzY9m0HXTan1K59/h5oFrfbMHTIaX9uVdMrQKAa
      9lVzhoWU57M4K5mOSfZ1CtoseKRPcGYWci3ekKZtcJUU3zv4j6n0HgRpbGnifTcIgPmW/ryt
      rxe89dfLjdcF/+YZwXeCZTOH1uMbFj/HayHF0mHa9EJRky8LDvWs75iKwmw5QGmT68s212In
      17Z9KMkhu+VzftAGPzSLUUJ68EwkzGXZTGxlCEGPpQncgEsLJg/3gylhqqgZyEBbS1wg7xv8
      xcP/I37n0H3p6bkVCCGYs/pQGlpt8VIdFkshzcy1RY1haHwfHhnaeD/nS5Cvaf746sNM5j4D
      qfWeC7siAD22xFWwcgPpj0mB15DWuBQUbxDifJDTJDrqy0Cjf65upkdsv28hEAx1hRtnyjBs
      KeYduUEAZnUMLzv4wA7+JlajXbieQdRuuNGBiAkX5xTZhODhweagX7eTBAKtFXN1QaUWMBPP
      QWxjw5FdsVSkWNcRu21Jf8RYe52RCqkVGUtiCEgakpQlSW7XwOABh1YBA+Upij7YQYAfuDQf
      ZpjKvPGfp+DKlOKd64qZGR8HyXBso59fBj54u61xQ1QK+hrPMWOGzy4hBW0tHqAmImF8CQl0
      NrJTm8/X3KWqq6BjgLPlDvxAgA6PmIrB0/sMDvds/AbRaLatCVsx9UQVOUuhUlsLge56BbAF
      lH1FwpAUgwCzRRgMIUhYFnkV0lS4CtoNWPUUOxTxPNAwyisM+wtMlRV7Iz6GIbfJEF839Xoj
      0ItmydVUIpKReGOktRDtXs0e+lDKEjNm2JUFIG4Iij5EDEExUMSloNs2mHF8LClIGAJfQyVY
      r7GNSUFdaTosyaqvqN+laSCkwQtdv8bqhd+nN1onaoH2QupDrRWGlHh+gAo0vh/8/+2dW29c
      VxWAv73PbS6+27GdxnEbp0nT0iQtKRBUQZEKLUJCSEigSrxA+xP4G7wh8cAjEkI88ESFEL1E
      vUilIJoQtdCmadO0sUnisTsej+dyztl78XBmxk4yTlrbx7c538sc2T7jpXP22muvtddei7rK
      sRwKMyMw0a/4OJ7ADo7fYSk3rQChgBaohsnOznxoOoN7PlzdMGtfL0aJ05eOq7S70fVl8kTY
      CFSwWjZldcl3Z5hzxcCK1swUYW3cX6G44Exy8bGfbrmcRSdxzf2WXJbEGfY02BgGvaTadSQw
      oJOwJwKOgroVPAVRKyKkUFs22YWD9/HJ+Df5hncOawHfUF2OOvVB4yjG9z2Wm7Dc7+IVHKrN
      Op9Fw7xy+Odd96+2xAdo2LUhstWfR2uu2w9hE8mxe57i8k0aBrAmaZ207uBvz/DC+1VN0YPI
      CmvPvpRjlzeOPQP+1md61oywYqQj0fVm8tbaEaDroU3yGoFSa0Jr05b+85Y/2AzNlk52s8On
      aJRfYzRvaeDgeUGnInQQ5LBWGBl0uVoSDvgN3EHNX51nsfnBrt/XOztQuwBrhdmqcCSXbGol
      mSgqqeYgGkRj4iRLBFFEohnQcNQRLi0orq4k31M3Dq8OPk51+mQqcso6n2t/b+/yu7VstaW3
      A+Oci0+TJJrqVh9iRRB4aKUIApecrzl70DAzAi81TlKZXP85bcoCjLgaTyuqsWXFdrdzmmT7
      3AB9jqIcC3mtqK/z9/uZMD+AbTZYtJDXgtikPo1SqpVsKJ0XGscxoRsQV2P0WIFjgVAO4RNR
      /Gf8JB+c+UlPbBzejlKK//pfQeQClcoKvu9jrcXzPKw1OK6DMYLjOrwePcr56R/ftX/CpixA
      wVFEVnB14gxPBUkOSKCSCJDbyhsxJMpiJIkuQOIkTfi6p0xQf22BE8Mec8ahUMgljfNcB8/z
      yOcC8vkA13XxPI9CIU/VQr+/OsgHNFyJClw8/gxs0/leTZLbM+F/uTeVZoxvyCwSx0KxmAcF
      QeCTyycZytZCpS68WDvD29PPgdul+cIaNvUUjSR5IpHAeGvAW4EhT/N5K9KTazlJSsGyaUUF
      IsuYr1mIbE85w/eXP8QPXBzf4DjQVwxwPacVAr2tWTRCrH2sOMRSw1UQAxdP/QgZntw2mQdc
      zUJkGPESRZz0NSstH2EycIisMB9ZRlyNq+FmaLkvcFDAbDMdj29x+ATnr57jq5OKa4sOH9sH
      qEQDBNJgzjnE/MQxGJ36Qt+1YQVQwGJkOo5uNRaaWrAk2+FFRxHGQiVOnKRya6t8JbYYkmhQ
      El7rjaWQNOscqX3G5ZriaA5A8Dqzu9xxGEaheMCNeXHsMV4amaFYL1PrG6V25PFtldtTEGiF
      EelkeDas4GuFA1Ss4CvodxVhEnZvFQVLTyY1OMZfHvolr5Y+onH8kU0tBTesAAI014zdmpWO
      xxMLLLUGdvtvbv+MBKIeGfwAY5+d50FnmfesIv8Fn3pOC2duXOCPp39IdYc6dJYiS14r5ju5
      PkkKciRCKbI0bJKRNB9aQkmuF2Ob+s60Cgo0D53c9P/ppSX4jiFRk+OzfycS0OGXGxz3uxFj
      H/8zNdnuhdCa3Fo0rHSWrfXW4BdrWQmbq6FuYc9sdG5aARRwwNOdLfKMO1ELczxhZ7EiFJzV
      1IdbsautVNcEEy/rQUozT2yXqBvDxnv2TMemQwnDrqYcW0Y9h6oxjHqahhFqVhjzEoepfd20
      wrIRDvgac4/kuf2EOC4GRYBlxap1k99EhGWbrP8XxOfqwDTnTzxzz/asO426R6RlN7P5XCAN
      YsCItJylxGT2OQrdOinUTpZqnxbS7NkJY2MMjTNvA6J6nQd8y/pBQuFPxVOUTn4X0zcCQX5f
      Z8buBjY9DJdiYcjVLMaWsBURaOeEmFaCVNugV+Jk8C/FSRitVyjMfcCUU8fEQq7LUrFdGyAC
      Kocexo5NJSe69tjg346GGVvNpi1A3cotu7prTwmVWtdG6EQRIDkE0ksMrdwgr0lSebscYr+o
      R/hf/yH8OMTc1slxL6GUgm1omLGV7L1ywXuQcj3kN+UpHrFzdEsHjJXLhYd/gBra453e9yC9
      tBLfEUSEYnmWRn6QgS7NnAGmwhJDr/9h33bN2c1kCpAyUq9SGTjEsT7Bc7orwKd9Uyx973lU
      sXvKbkZ6ZEuglFF+jvInl5BgiZooGkbI3bbKmS0ezAb/DpFZgJSRpRLuygI5U6dq7zww9JZ/
      mMv3n905AXuczAKkTaWEjQ1H84Z6U+hzhPY+wJt9J/jHky/sydZF+4XMAqSIRCFTl1/j22PC
      4byAqFuKVpke6I+w28kUIE0cl2tffw7fdZOK8EZuqZr3naV3eerlXyHV8g4K2dtktjdNRAhf
      /j3na4YhUUx69pbdXVfBWFzt9FHL2H4yBUiTuEmucpNTQxYN5G8b55fdUf78xAuowkDX2zPS
      J5t6UiUpbPtBFYqxJb8m/CkC5w4/RTR8cOfEy8gUIFUcl2owSOAoRtbYWhF4K3+E8tSjOydb
      BpApQLpoTTh4kFoMF5qKUquHyI3Y4c2zv0D6hu+4pdM1p0v71IytJ/MB0kRpxAuo5QZZkjJN
      iZJTYVpwVsqYfH/X2+IP32Hg2tvkizlKR5/FmT6xzYL3DpkFSBGlFGrsEMv1JjeasORororD
      O1GOwqW373pfY2CaxWCq03M5Ix0yC5Ay3oOnaV65CNVPed/kiK3HdNDEN/VOcdy1KKXwTj+F
      iAVjUW72itIkswBpkyviHD5BKdRIFFLJjxI6ATOLl3A/v77ubUlv5Wzwp82+UQB3g71000Yp
      hfvok5iJGS7XXBauz2GadSakzrPv/A536ea2yTKkDXqXPqedYt8owG5GeT7q6Z9hHjqLr+Ba
      1fB+TWOXbvK1N35LcOEVzJV3U5ejJpp1zuT0LOrX7y3Ip2F2DG87EBGkNAv/+hsszFGcOkL1
      4W+hD0zdtYJxRnpki8xtRCmFOjAF338eMTHLH/0bJxv8O0qmADuEclzc42d2WoyeJ5t6Mnqa
      TAEyeppMATJ6mkwBNkBO9UZR314gU4AN0JDsse0XsjeZ0dNkCpDR02QKkNHTZAqQ0dO4424W
      0dit5LVQt1nhrDT5P6P32rOWSiywAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
